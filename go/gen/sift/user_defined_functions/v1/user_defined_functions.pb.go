// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sift/user_defined_functions/v1/user_defined_functions.proto

package user_defined_functionsv1

import (
	_ "github.com/sift-stack/sift/go/gen/google/api"
	_ "github.com/sift-stack/sift/go/gen/protoc-gen-openapiv2/options"
	v2 "github.com/sift-stack/sift/go/gen/sift/calculated_channels/v2"
	v1 "github.com/sift-stack/sift/go/gen/sift/common/type/v1"
	v12 "github.com/sift-stack/sift/go/gen/sift/metadata/v1"
	v11 "github.com/sift-stack/sift/go/gen/sift/rules/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request for a call to `UserDefinedFunctionService_GetUserDefinedFunction` to retrieve the latest version of a user defined function.
// If `user_defined_function_id` is provided then all other arguments will be ignored. The argument `user_defined_function_id`
// should not be used together with `name`.
type GetUserDefinedFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctionId string `protobuf:"bytes,1,opt,name=user_defined_function_id,json=userDefinedFunctionId,proto3" json:"user_defined_function_id,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetUserDefinedFunctionRequest) Reset() {
	*x = GetUserDefinedFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionRequest) ProtoMessage() {}

func (x *GetUserDefinedFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionRequest.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserDefinedFunctionRequest) GetUserDefinedFunctionId() string {
	if x != nil {
		return x.UserDefinedFunctionId
	}
	return ""
}

func (x *GetUserDefinedFunctionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetUserDefinedFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunction *v1.UserDefinedFunction `protobuf:"bytes,1,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
}

func (x *GetUserDefinedFunctionResponse) Reset() {
	*x = GetUserDefinedFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionResponse) ProtoMessage() {}

func (x *GetUserDefinedFunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionResponse.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserDefinedFunctionResponse) GetUserDefinedFunction() *v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

// The request for a call to `UserDefinedFunctionService_GetUserDefinedFunctionVersion` to retrieve a specific version of a user defined function.
type GetUserDefinedFunctionVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctionVersionId string `protobuf:"bytes,1,opt,name=user_defined_function_version_id,json=userDefinedFunctionVersionId,proto3" json:"user_defined_function_version_id,omitempty"`
}

func (x *GetUserDefinedFunctionVersionRequest) Reset() {
	*x = GetUserDefinedFunctionVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionVersionRequest) ProtoMessage() {}

func (x *GetUserDefinedFunctionVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionVersionRequest.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionVersionRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserDefinedFunctionVersionRequest) GetUserDefinedFunctionVersionId() string {
	if x != nil {
		return x.UserDefinedFunctionVersionId
	}
	return ""
}

type GetUserDefinedFunctionVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunction *v1.UserDefinedFunction `protobuf:"bytes,1,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
}

func (x *GetUserDefinedFunctionVersionResponse) Reset() {
	*x = GetUserDefinedFunctionVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionVersionResponse) ProtoMessage() {}

func (x *GetUserDefinedFunctionVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionVersionResponse.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionVersionResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserDefinedFunctionVersionResponse) GetUserDefinedFunction() *v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

// The request for a call to `UserDefinedFunctionService_GetUserDefinedFunctionDependents` to retrieve versions of user defined functions.
type GetUserDefinedFunctionDependentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Types that are assignable to UserDefinedFunction:
	//
	//	*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionId
	//	*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionName
	//	*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionVersionId
	UserDefinedFunction isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction `protobuf_oneof:"user_defined_function"`
}

func (x *GetUserDefinedFunctionDependentsRequest) Reset() {
	*x = GetUserDefinedFunctionDependentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionDependentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionDependentsRequest) ProtoMessage() {}

func (x *GetUserDefinedFunctionDependentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionDependentsRequest.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionDependentsRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserDefinedFunctionDependentsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (m *GetUserDefinedFunctionDependentsRequest) GetUserDefinedFunction() isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction {
	if m != nil {
		return m.UserDefinedFunction
	}
	return nil
}

func (x *GetUserDefinedFunctionDependentsRequest) GetUserDefinedFunctionId() string {
	if x, ok := x.GetUserDefinedFunction().(*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionId); ok {
		return x.UserDefinedFunctionId
	}
	return ""
}

func (x *GetUserDefinedFunctionDependentsRequest) GetUserDefinedFunctionName() string {
	if x, ok := x.GetUserDefinedFunction().(*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionName); ok {
		return x.UserDefinedFunctionName
	}
	return ""
}

func (x *GetUserDefinedFunctionDependentsRequest) GetUserDefinedFunctionVersionId() string {
	if x, ok := x.GetUserDefinedFunction().(*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionVersionId); ok {
		return x.UserDefinedFunctionVersionId
	}
	return ""
}

type isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction interface {
	isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction()
}

type GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionId struct {
	UserDefinedFunctionId string `protobuf:"bytes,2,opt,name=user_defined_function_id,json=userDefinedFunctionId,proto3,oneof"`
}

type GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionName struct {
	UserDefinedFunctionName string `protobuf:"bytes,3,opt,name=user_defined_function_name,json=userDefinedFunctionName,proto3,oneof"`
}

type GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionVersionId struct {
	UserDefinedFunctionVersionId string `protobuf:"bytes,4,opt,name=user_defined_function_version_id,json=userDefinedFunctionVersionId,proto3,oneof"`
}

func (*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionId) isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction() {
}

func (*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionName) isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction() {
}

func (*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionVersionId) isGetUserDefinedFunctionDependentsRequest_UserDefinedFunction() {
}

type GetUserDefinedFunctionDependentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctions             []*v1.UserDefinedFunction `protobuf:"bytes,1,rep,name=user_defined_functions,json=userDefinedFunctions,proto3" json:"user_defined_functions,omitempty"`
	NextPageTokenUserDefinedFunction string                    `protobuf:"bytes,2,opt,name=next_page_token_user_defined_function,json=nextPageTokenUserDefinedFunction,proto3" json:"next_page_token_user_defined_function,omitempty"`
	CalculatedChannels               []*v2.CalculatedChannel   `protobuf:"bytes,3,rep,name=calculated_channels,json=calculatedChannels,proto3" json:"calculated_channels,omitempty"`
	NextPageTokenCalculatedChannel   string                    `protobuf:"bytes,4,opt,name=next_page_token_calculated_channel,json=nextPageTokenCalculatedChannel,proto3" json:"next_page_token_calculated_channel,omitempty"`
	Rules                            []*v11.Rule               `protobuf:"bytes,5,rep,name=rules,proto3" json:"rules,omitempty"`
	NextPageTokenRule                string                    `protobuf:"bytes,6,opt,name=next_page_token_rule,json=nextPageTokenRule,proto3" json:"next_page_token_rule,omitempty"`
}

func (x *GetUserDefinedFunctionDependentsResponse) Reset() {
	*x = GetUserDefinedFunctionDependentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionDependentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionDependentsResponse) ProtoMessage() {}

func (x *GetUserDefinedFunctionDependentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionDependentsResponse.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionDependentsResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserDefinedFunctionDependentsResponse) GetUserDefinedFunctions() []*v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunctions
	}
	return nil
}

func (x *GetUserDefinedFunctionDependentsResponse) GetNextPageTokenUserDefinedFunction() string {
	if x != nil {
		return x.NextPageTokenUserDefinedFunction
	}
	return ""
}

func (x *GetUserDefinedFunctionDependentsResponse) GetCalculatedChannels() []*v2.CalculatedChannel {
	if x != nil {
		return x.CalculatedChannels
	}
	return nil
}

func (x *GetUserDefinedFunctionDependentsResponse) GetNextPageTokenCalculatedChannel() string {
	if x != nil {
		return x.NextPageTokenCalculatedChannel
	}
	return ""
}

func (x *GetUserDefinedFunctionDependentsResponse) GetRules() []*v11.Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *GetUserDefinedFunctionDependentsResponse) GetNextPageTokenRule() string {
	if x != nil {
		return x.NextPageTokenRule
	}
	return ""
}

// The request for a call to `UserDefinedFunctionService_GetUserDefinedFunctionVersions` to retrieve versions of user defined functions.
type GetUserDefinedFunctionVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctionVersionIds []string `protobuf:"bytes,1,rep,name=user_defined_function_version_ids,json=userDefinedFunctionVersionIds,proto3" json:"user_defined_function_version_ids,omitempty"`
}

func (x *GetUserDefinedFunctionVersionsRequest) Reset() {
	*x = GetUserDefinedFunctionVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionVersionsRequest) ProtoMessage() {}

func (x *GetUserDefinedFunctionVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionVersionsRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserDefinedFunctionVersionsRequest) GetUserDefinedFunctionVersionIds() []string {
	if x != nil {
		return x.UserDefinedFunctionVersionIds
	}
	return nil
}

type GetUserDefinedFunctionVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctions []*v1.UserDefinedFunction `protobuf:"bytes,1,rep,name=user_defined_functions,json=userDefinedFunctions,proto3" json:"user_defined_functions,omitempty"`
}

func (x *GetUserDefinedFunctionVersionsResponse) Reset() {
	*x = GetUserDefinedFunctionVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDefinedFunctionVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDefinedFunctionVersionsResponse) ProtoMessage() {}

func (x *GetUserDefinedFunctionVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDefinedFunctionVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserDefinedFunctionVersionsResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserDefinedFunctionVersionsResponse) GetUserDefinedFunctions() []*v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunctions
	}
	return nil
}

type CreateUserDefinedFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    *string              `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Expression     string               `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	FunctionInputs []*v1.FunctionInput  `protobuf:"bytes,4,rep,name=function_inputs,json=functionInputs,proto3" json:"function_inputs,omitempty"`
	UserNotes      *string              `protobuf:"bytes,5,opt,name=user_notes,json=userNotes,proto3,oneof" json:"user_notes,omitempty"`
	Metadata       []*v12.MetadataValue `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *CreateUserDefinedFunctionRequest) Reset() {
	*x = CreateUserDefinedFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDefinedFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDefinedFunctionRequest) ProtoMessage() {}

func (x *CreateUserDefinedFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDefinedFunctionRequest.ProtoReflect.Descriptor instead.
func (*CreateUserDefinedFunctionRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserDefinedFunctionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserDefinedFunctionRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateUserDefinedFunctionRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *CreateUserDefinedFunctionRequest) GetFunctionInputs() []*v1.FunctionInput {
	if x != nil {
		return x.FunctionInputs
	}
	return nil
}

func (x *CreateUserDefinedFunctionRequest) GetUserNotes() string {
	if x != nil && x.UserNotes != nil {
		return *x.UserNotes
	}
	return ""
}

func (x *CreateUserDefinedFunctionRequest) GetMetadata() []*v12.MetadataValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateUserDefinedFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunction *v1.UserDefinedFunction `protobuf:"bytes,1,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
}

func (x *CreateUserDefinedFunctionResponse) Reset() {
	*x = CreateUserDefinedFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserDefinedFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDefinedFunctionResponse) ProtoMessage() {}

func (x *CreateUserDefinedFunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDefinedFunctionResponse.ProtoReflect.Descriptor instead.
func (*CreateUserDefinedFunctionResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{9}
}

func (x *CreateUserDefinedFunctionResponse) GetUserDefinedFunction() *v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

type ValidateUserDefinedFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expression     string              `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	FunctionInputs []*v1.FunctionInput `protobuf:"bytes,2,rep,name=function_inputs,json=functionInputs,proto3" json:"function_inputs,omitempty"`
}

func (x *ValidateUserDefinedFunctionRequest) Reset() {
	*x = ValidateUserDefinedFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserDefinedFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserDefinedFunctionRequest) ProtoMessage() {}

func (x *ValidateUserDefinedFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserDefinedFunctionRequest.ProtoReflect.Descriptor instead.
func (*ValidateUserDefinedFunctionRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{10}
}

func (x *ValidateUserDefinedFunctionRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ValidateUserDefinedFunctionRequest) GetFunctionInputs() []*v1.FunctionInput {
	if x != nil {
		return x.FunctionInputs
	}
	return nil
}

type ValidateUserDefinedFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*ValidateUserDefinedFunctionResponse_Error
	//	*ValidateUserDefinedFunctionResponse_Success
	Result isValidateUserDefinedFunctionResponse_Result `protobuf_oneof:"result"`
}

func (x *ValidateUserDefinedFunctionResponse) Reset() {
	*x = ValidateUserDefinedFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserDefinedFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserDefinedFunctionResponse) ProtoMessage() {}

func (x *ValidateUserDefinedFunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserDefinedFunctionResponse.ProtoReflect.Descriptor instead.
func (*ValidateUserDefinedFunctionResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{11}
}

func (m *ValidateUserDefinedFunctionResponse) GetResult() isValidateUserDefinedFunctionResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ValidateUserDefinedFunctionResponse) GetError() *ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult {
	if x, ok := x.GetResult().(*ValidateUserDefinedFunctionResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ValidateUserDefinedFunctionResponse) GetSuccess() *ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult {
	if x, ok := x.GetResult().(*ValidateUserDefinedFunctionResponse_Success); ok {
		return x.Success
	}
	return nil
}

type isValidateUserDefinedFunctionResponse_Result interface {
	isValidateUserDefinedFunctionResponse_Result()
}

type ValidateUserDefinedFunctionResponse_Error struct {
	Error *ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ValidateUserDefinedFunctionResponse_Success struct {
	Success *ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

func (*ValidateUserDefinedFunctionResponse_Error) isValidateUserDefinedFunctionResponse_Result() {}

func (*ValidateUserDefinedFunctionResponse_Success) isValidateUserDefinedFunctionResponse_Result() {}

// The request for a call to `UserDefinedFunctionService_UpdateUserDefinedFunction` to update a user defined function. Updating a user
// defined function creates a new version of the user defined function, leaving the previous untouched. If no update is deemed necessary, then the
// the current version is returned. If name is changed then only name will be changed. If archive date is changed then only archive date will be changed.
// To archive user defined function, specify `archived_date` in the `update mask` as well as a non-null value for `archived_date` in the
// `user_defined_function` object. To unarchive a user defined function, specify `archived_date` in the `update mask` and a `null` value for `archived_date`
// in the `user_defined_function` object.
type UpdateUserDefinedFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user defined function to update.
	UserDefinedFunction *v1.UserDefinedFunction `protobuf:"bytes,1,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
	// The list of fields to be updated. The fields available to be updated are `name`, `archived_date`, `description`, `expression`, and `function_inputs`.
	//
	//	-- `name` can't be updated if the function has ever had any dependencies
	//	-- `function_inputs` inputs can't be updated if the function has any dependents (functions or calculated channels with a dependency on this function).
	//	-- `expression` can't be updated if the function has dependents and the expression changes the output type.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateUserDefinedFunctionRequest) Reset() {
	*x = UpdateUserDefinedFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDefinedFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDefinedFunctionRequest) ProtoMessage() {}

func (x *UpdateUserDefinedFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDefinedFunctionRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserDefinedFunctionRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUserDefinedFunctionRequest) GetUserDefinedFunction() *v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

func (x *UpdateUserDefinedFunctionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateUserDefinedFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunction *v1.UserDefinedFunction `protobuf:"bytes,1,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
}

func (x *UpdateUserDefinedFunctionResponse) Reset() {
	*x = UpdateUserDefinedFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDefinedFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDefinedFunctionResponse) ProtoMessage() {}

func (x *UpdateUserDefinedFunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDefinedFunctionResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserDefinedFunctionResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateUserDefinedFunctionResponse) GetUserDefinedFunction() *v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

type CheckUpdatableFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctionId string                 `protobuf:"bytes,1,opt,name=user_defined_function_id,json=userDefinedFunctionId,proto3" json:"user_defined_function_id,omitempty"`
	UpdateMask            *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *CheckUpdatableFieldsRequest) Reset() {
	*x = CheckUpdatableFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUpdatableFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatableFieldsRequest) ProtoMessage() {}

func (x *CheckUpdatableFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatableFieldsRequest.ProtoReflect.Descriptor instead.
func (*CheckUpdatableFieldsRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{14}
}

func (x *CheckUpdatableFieldsRequest) GetUserDefinedFunctionId() string {
	if x != nil {
		return x.UserDefinedFunctionId
	}
	return ""
}

func (x *CheckUpdatableFieldsRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type CheckUpdatableFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedFields *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=allowed_fields,json=allowedFields,proto3" json:"allowed_fields,omitempty"`
	// Disallowed Fields will contain the update fields as the key and the reason for rejection as the value.
	DisallowedFields map[string]string `protobuf:"bytes,2,rep,name=disallowed_fields,json=disallowedFields,proto3" json:"disallowed_fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckUpdatableFieldsResponse) Reset() {
	*x = CheckUpdatableFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUpdatableFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatableFieldsResponse) ProtoMessage() {}

func (x *CheckUpdatableFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatableFieldsResponse.ProtoReflect.Descriptor instead.
func (*CheckUpdatableFieldsResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{15}
}

func (x *CheckUpdatableFieldsResponse) GetAllowedFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.AllowedFields
	}
	return nil
}

func (x *CheckUpdatableFieldsResponse) GetDisallowedFields() map[string]string {
	if x != nil {
		return x.DisallowedFields
	}
	return nil
}

// The request for a call to `UserDefinedFunctionService_ListUserDefinedFunctions` to retrieve lateset versions of user defined functions.
type ListUserDefinedFunctionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of user defined functions to return. The service may return fewer than this value.
	// If unspecified, at most 50 user defined functions will be returned. The maximum value is 1000; values above
	// 1000 will be coerced to 1000. Optional.
	PageSize uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListUserDefinedFunctions` call.
	// Provide this to retrieve the subsequent page.
	// When paginating, all other parameters provided to `ListUserDefinedFunctions` must match
	// the call that provided the page token. Optional.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
	// There are currently no available fields.
	// For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// How to order the retrieved user defined functions. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
	// Available fields to order_by are `created_date`, `modified_date`, and `name`.
	// If left empty, items are ordered by `created_date` in descending order (newest-first).
	// For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
	// Example: "created_date desc,modified_date".
	OrderBy string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListUserDefinedFunctionsRequest) Reset() {
	*x = ListUserDefinedFunctionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserDefinedFunctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDefinedFunctionsRequest) ProtoMessage() {}

func (x *ListUserDefinedFunctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDefinedFunctionsRequest.ProtoReflect.Descriptor instead.
func (*ListUserDefinedFunctionsRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{16}
}

func (x *ListUserDefinedFunctionsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserDefinedFunctionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserDefinedFunctionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserDefinedFunctionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// The response of a call to `UserDefinedFunctionService_ListUserDefinedFunctions`.
type ListUserDefinedFunctionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctions []*v1.UserDefinedFunction `protobuf:"bytes,1,rep,name=user_defined_functions,json=userDefinedFunctions,proto3" json:"user_defined_functions,omitempty"`
	NextPageToken        string                    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListUserDefinedFunctionsResponse) Reset() {
	*x = ListUserDefinedFunctionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserDefinedFunctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDefinedFunctionsResponse) ProtoMessage() {}

func (x *ListUserDefinedFunctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDefinedFunctionsResponse.ProtoReflect.Descriptor instead.
func (*ListUserDefinedFunctionsResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{17}
}

func (x *ListUserDefinedFunctionsResponse) GetUserDefinedFunctions() []*v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunctions
	}
	return nil
}

func (x *ListUserDefinedFunctionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// The request for a call to `UserDefinedFunctionService_ListUserDefinedFunctionVersions` to retrieve versions of user defined function.
// If `user_defined_function_id` is provided then `name` is ignored.
type ListUserDefinedFunctionVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctionId string `protobuf:"bytes,1,opt,name=user_defined_function_id,json=userDefinedFunctionId,proto3" json:"user_defined_function_id,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of user defined function versions to return. The service may return fewer than this value.
	// If unspecified, at most 50 user defined function versions will be returned. The maximum value is 1000; values above
	// 1000 will be coerced to 1000. Optional.
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListUserDefinedFunctions` call.
	// Provide this to retrieve the subsequent page.
	// When paginating, all other parameters provided to `ListUserDefinedFunctions` must match
	// the call that provided the page token. Optional.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
	// There are currently no available fields.
	// For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
	Filter string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	// How to order the retrieved user defined functions. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
	// Available fields to order_by are `created_date`, `modified_date`, `name`, and `version`.
	// If left empty, items are ordered by `name` in ascending order (oldest-first).
	// For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
	// Example: "version desc,name".
	OrderBy string `protobuf:"bytes,6,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListUserDefinedFunctionVersionsRequest) Reset() {
	*x = ListUserDefinedFunctionVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserDefinedFunctionVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDefinedFunctionVersionsRequest) ProtoMessage() {}

func (x *ListUserDefinedFunctionVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDefinedFunctionVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListUserDefinedFunctionVersionsRequest) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{18}
}

func (x *ListUserDefinedFunctionVersionsRequest) GetUserDefinedFunctionId() string {
	if x != nil {
		return x.UserDefinedFunctionId
	}
	return ""
}

func (x *ListUserDefinedFunctionVersionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListUserDefinedFunctionVersionsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserDefinedFunctionVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserDefinedFunctionVersionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserDefinedFunctionVersionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// The response of a call to `UserDefinedFunctionService_ListUserDefinedFunctionVersions`.
type ListUserDefinedFunctionVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunctions []*v1.UserDefinedFunction `protobuf:"bytes,1,rep,name=user_defined_functions,json=userDefinedFunctions,proto3" json:"user_defined_functions,omitempty"`
	NextPageToken        string                    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListUserDefinedFunctionVersionsResponse) Reset() {
	*x = ListUserDefinedFunctionVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserDefinedFunctionVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDefinedFunctionVersionsResponse) ProtoMessage() {}

func (x *ListUserDefinedFunctionVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDefinedFunctionVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListUserDefinedFunctionVersionsResponse) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{19}
}

func (x *ListUserDefinedFunctionVersionsResponse) GetUserDefinedFunctions() []*v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunctions
	}
	return nil
}

func (x *ListUserDefinedFunctionVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult) Reset() {
	*x = ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult) ProtoMessage() {}

func (x *ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult.ProtoReflect.Descriptor instead.
func (*ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDefinedFunction *v1.UserDefinedFunction `protobuf:"bytes,1,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
}

func (x *ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult) Reset() {
	*x = ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult) ProtoMessage() {
}

func (x *ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult) ProtoReflect() protoreflect.Message {
	mi := &file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult.ProtoReflect.Descriptor instead.
func (*ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult) Descriptor() ([]byte, []int) {
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP(), []int{11, 1}
}

func (x *ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult) GetUserDefinedFunction() *v1.UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

var File_sift_user_defined_functions_v1_user_defined_functions_proto protoreflect.FileDescriptor

var file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x73,
	0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35,
	0x73, 0x69, 0x66, 0x74, 0x2f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x15, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x73, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x20, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x3e, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x17, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x20, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x04,
	0x0a, 0x28, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x66,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x54, 0x0a, 0x25, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x13, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x22, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x1e, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69,
	0x66, 0x74, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x14,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x11, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x22, 0x76, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x21, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x1d, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe8, 0x02, 0x0a, 0x20, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x15, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x66,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9b,
	0x01, 0x0a, 0x22, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0xab, 0x04, 0x0a,
	0x23, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x6c, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6e, 0x2e,
	0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x54, 0x0a, 0x28, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x8f,
	0x01, 0x0a, 0x2a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x61, 0x0a,
	0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x20, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x61, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x86, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x66, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01,
	0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xb2, 0x02,
	0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x52, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x64, 0x69, 0x73,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x43, 0x0a,
	0x15, 0x44, 0x69, 0x73, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa4, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xb4, 0x01, 0x0a, 0x20, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63,
	0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x14, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x82, 0x02, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x18, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x32, 0xee, 0x18, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xaf, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x2e,
	0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73,
	0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x01, 0x92,
	0x41, 0x51, 0x12, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x20,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65,
	0x72, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x12, 0x39, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xdc, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x73,
	0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x92, 0x41, 0x58, 0x12, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x20, 0x61, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x12, 0x4a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xb2, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e,
	0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x92, 0x41, 0x4e, 0x12, 0x1e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2c, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f,
	0x66, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12,
	0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xbf, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x47, 0x2e,
	0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x87, 0x01, 0x92, 0x41, 0x53, 0x12, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x2f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x20, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x6f, 0x66,
	0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12,
	0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x8a, 0x02, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x73, 0x69, 0x66,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x92,
	0x41, 0x3c, 0x12, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xa9, 0x02, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x73, 0x69,
	0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x80, 0x01, 0x92, 0x41, 0x4b, 0x12, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x2c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61,
	0x20, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x12, 0xa7, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x92, 0x41, 0x58, 0x12, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77,
	0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x75, 0x73,
	0x65, 0x72, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x32, 0x1e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb5, 0x02,
	0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3b, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa1, 0x01, 0x92, 0x41, 0x67, 0x12, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x4f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x20, 0x69, 0x66, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x20, 0x70, 0x61, 0x74, 0x68, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x31, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0xb8, 0x02, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3f, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x98, 0x01, 0x92, 0x41, 0x6f, 0x12, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x53, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x62, 0x61,
	0x73, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x61, 0x6e, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0xf1, 0x02, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x73,
	0x69, 0x66, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01, 0x92, 0x41, 0x6f, 0x12, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4c, 0x4c, 0x69,
	0x73, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61,
	0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x75, 0x73, 0x65, 0x72,
	0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x6e, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44,
	0x12, 0x42, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0xac, 0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x69, 0x66,
	0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x19, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x66, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x73, 0x69, 0x66, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x69, 0x66, 0x74,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x55, 0x58, 0xaa, 0x02, 0x1c, 0x53, 0x69, 0x66, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1c, 0x53, 0x69, 0x66, 0x74, 0x5c,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x28, 0x53, 0x69, 0x66, 0x74, 0x5c, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x1e, 0x53, 0x69, 0x66, 0x74, 0x3a, 0x3a, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescOnce sync.Once
	file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescData = file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDesc
)

func file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescGZIP() []byte {
	file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescOnce.Do(func() {
		file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescData = protoimpl.X.CompressGZIP(file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescData)
	})
	return file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDescData
}

var file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_sift_user_defined_functions_v1_user_defined_functions_proto_goTypes = []interface{}{
	(*GetUserDefinedFunctionRequest)(nil),                                                  // 0: sift.user_defined_functions.v1.GetUserDefinedFunctionRequest
	(*GetUserDefinedFunctionResponse)(nil),                                                 // 1: sift.user_defined_functions.v1.GetUserDefinedFunctionResponse
	(*GetUserDefinedFunctionVersionRequest)(nil),                                           // 2: sift.user_defined_functions.v1.GetUserDefinedFunctionVersionRequest
	(*GetUserDefinedFunctionVersionResponse)(nil),                                          // 3: sift.user_defined_functions.v1.GetUserDefinedFunctionVersionResponse
	(*GetUserDefinedFunctionDependentsRequest)(nil),                                        // 4: sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsRequest
	(*GetUserDefinedFunctionDependentsResponse)(nil),                                       // 5: sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsResponse
	(*GetUserDefinedFunctionVersionsRequest)(nil),                                          // 6: sift.user_defined_functions.v1.GetUserDefinedFunctionVersionsRequest
	(*GetUserDefinedFunctionVersionsResponse)(nil),                                         // 7: sift.user_defined_functions.v1.GetUserDefinedFunctionVersionsResponse
	(*CreateUserDefinedFunctionRequest)(nil),                                               // 8: sift.user_defined_functions.v1.CreateUserDefinedFunctionRequest
	(*CreateUserDefinedFunctionResponse)(nil),                                              // 9: sift.user_defined_functions.v1.CreateUserDefinedFunctionResponse
	(*ValidateUserDefinedFunctionRequest)(nil),                                             // 10: sift.user_defined_functions.v1.ValidateUserDefinedFunctionRequest
	(*ValidateUserDefinedFunctionResponse)(nil),                                            // 11: sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse
	(*UpdateUserDefinedFunctionRequest)(nil),                                               // 12: sift.user_defined_functions.v1.UpdateUserDefinedFunctionRequest
	(*UpdateUserDefinedFunctionResponse)(nil),                                              // 13: sift.user_defined_functions.v1.UpdateUserDefinedFunctionResponse
	(*CheckUpdatableFieldsRequest)(nil),                                                    // 14: sift.user_defined_functions.v1.CheckUpdatableFieldsRequest
	(*CheckUpdatableFieldsResponse)(nil),                                                   // 15: sift.user_defined_functions.v1.CheckUpdatableFieldsResponse
	(*ListUserDefinedFunctionsRequest)(nil),                                                // 16: sift.user_defined_functions.v1.ListUserDefinedFunctionsRequest
	(*ListUserDefinedFunctionsResponse)(nil),                                               // 17: sift.user_defined_functions.v1.ListUserDefinedFunctionsResponse
	(*ListUserDefinedFunctionVersionsRequest)(nil),                                         // 18: sift.user_defined_functions.v1.ListUserDefinedFunctionVersionsRequest
	(*ListUserDefinedFunctionVersionsResponse)(nil),                                        // 19: sift.user_defined_functions.v1.ListUserDefinedFunctionVersionsResponse
	(*ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult)(nil),   // 20: sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.ErrorValidatingUserDefinedFunctionResult
	(*ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult)(nil), // 21: sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.SuccessValidatingUserDefinedFunctionResult
	nil,                            // 22: sift.user_defined_functions.v1.CheckUpdatableFieldsResponse.DisallowedFieldsEntry
	(*v1.UserDefinedFunction)(nil), // 23: sift.common.type.v1.UserDefinedFunction
	(*v2.CalculatedChannel)(nil),   // 24: sift.calculated_channels.v2.CalculatedChannel
	(*v11.Rule)(nil),               // 25: sift.rules.v1.Rule
	(*v1.FunctionInput)(nil),       // 26: sift.common.type.v1.FunctionInput
	(*v12.MetadataValue)(nil),      // 27: sift.metadata.v1.MetadataValue
	(*fieldmaskpb.FieldMask)(nil),  // 28: google.protobuf.FieldMask
}
var file_sift_user_defined_functions_v1_user_defined_functions_proto_depIdxs = []int32{
	23, // 0: sift.user_defined_functions.v1.GetUserDefinedFunctionResponse.user_defined_function:type_name -> sift.common.type.v1.UserDefinedFunction
	23, // 1: sift.user_defined_functions.v1.GetUserDefinedFunctionVersionResponse.user_defined_function:type_name -> sift.common.type.v1.UserDefinedFunction
	23, // 2: sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsResponse.user_defined_functions:type_name -> sift.common.type.v1.UserDefinedFunction
	24, // 3: sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsResponse.calculated_channels:type_name -> sift.calculated_channels.v2.CalculatedChannel
	25, // 4: sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsResponse.rules:type_name -> sift.rules.v1.Rule
	23, // 5: sift.user_defined_functions.v1.GetUserDefinedFunctionVersionsResponse.user_defined_functions:type_name -> sift.common.type.v1.UserDefinedFunction
	26, // 6: sift.user_defined_functions.v1.CreateUserDefinedFunctionRequest.function_inputs:type_name -> sift.common.type.v1.FunctionInput
	27, // 7: sift.user_defined_functions.v1.CreateUserDefinedFunctionRequest.metadata:type_name -> sift.metadata.v1.MetadataValue
	23, // 8: sift.user_defined_functions.v1.CreateUserDefinedFunctionResponse.user_defined_function:type_name -> sift.common.type.v1.UserDefinedFunction
	26, // 9: sift.user_defined_functions.v1.ValidateUserDefinedFunctionRequest.function_inputs:type_name -> sift.common.type.v1.FunctionInput
	20, // 10: sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.error:type_name -> sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.ErrorValidatingUserDefinedFunctionResult
	21, // 11: sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.success:type_name -> sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.SuccessValidatingUserDefinedFunctionResult
	23, // 12: sift.user_defined_functions.v1.UpdateUserDefinedFunctionRequest.user_defined_function:type_name -> sift.common.type.v1.UserDefinedFunction
	28, // 13: sift.user_defined_functions.v1.UpdateUserDefinedFunctionRequest.update_mask:type_name -> google.protobuf.FieldMask
	23, // 14: sift.user_defined_functions.v1.UpdateUserDefinedFunctionResponse.user_defined_function:type_name -> sift.common.type.v1.UserDefinedFunction
	28, // 15: sift.user_defined_functions.v1.CheckUpdatableFieldsRequest.update_mask:type_name -> google.protobuf.FieldMask
	28, // 16: sift.user_defined_functions.v1.CheckUpdatableFieldsResponse.allowed_fields:type_name -> google.protobuf.FieldMask
	22, // 17: sift.user_defined_functions.v1.CheckUpdatableFieldsResponse.disallowed_fields:type_name -> sift.user_defined_functions.v1.CheckUpdatableFieldsResponse.DisallowedFieldsEntry
	23, // 18: sift.user_defined_functions.v1.ListUserDefinedFunctionsResponse.user_defined_functions:type_name -> sift.common.type.v1.UserDefinedFunction
	23, // 19: sift.user_defined_functions.v1.ListUserDefinedFunctionVersionsResponse.user_defined_functions:type_name -> sift.common.type.v1.UserDefinedFunction
	23, // 20: sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse.SuccessValidatingUserDefinedFunctionResult.user_defined_function:type_name -> sift.common.type.v1.UserDefinedFunction
	0,  // 21: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunction:input_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionRequest
	2,  // 22: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunctionVersion:input_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionVersionRequest
	6,  // 23: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunctionVersions:input_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionVersionsRequest
	4,  // 24: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunctionDependents:input_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsRequest
	8,  // 25: sift.user_defined_functions.v1.UserDefinedFunctionService.CreateUserDefinedFunction:input_type -> sift.user_defined_functions.v1.CreateUserDefinedFunctionRequest
	10, // 26: sift.user_defined_functions.v1.UserDefinedFunctionService.ValidateUserDefinedFunction:input_type -> sift.user_defined_functions.v1.ValidateUserDefinedFunctionRequest
	12, // 27: sift.user_defined_functions.v1.UserDefinedFunctionService.UpdateUserDefinedFunction:input_type -> sift.user_defined_functions.v1.UpdateUserDefinedFunctionRequest
	14, // 28: sift.user_defined_functions.v1.UserDefinedFunctionService.CheckUpdatableFields:input_type -> sift.user_defined_functions.v1.CheckUpdatableFieldsRequest
	16, // 29: sift.user_defined_functions.v1.UserDefinedFunctionService.ListUserDefinedFunctions:input_type -> sift.user_defined_functions.v1.ListUserDefinedFunctionsRequest
	18, // 30: sift.user_defined_functions.v1.UserDefinedFunctionService.ListUserDefinedFunctionVersions:input_type -> sift.user_defined_functions.v1.ListUserDefinedFunctionVersionsRequest
	1,  // 31: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunction:output_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionResponse
	3,  // 32: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunctionVersion:output_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionVersionResponse
	7,  // 33: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunctionVersions:output_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionVersionsResponse
	5,  // 34: sift.user_defined_functions.v1.UserDefinedFunctionService.GetUserDefinedFunctionDependents:output_type -> sift.user_defined_functions.v1.GetUserDefinedFunctionDependentsResponse
	9,  // 35: sift.user_defined_functions.v1.UserDefinedFunctionService.CreateUserDefinedFunction:output_type -> sift.user_defined_functions.v1.CreateUserDefinedFunctionResponse
	11, // 36: sift.user_defined_functions.v1.UserDefinedFunctionService.ValidateUserDefinedFunction:output_type -> sift.user_defined_functions.v1.ValidateUserDefinedFunctionResponse
	13, // 37: sift.user_defined_functions.v1.UserDefinedFunctionService.UpdateUserDefinedFunction:output_type -> sift.user_defined_functions.v1.UpdateUserDefinedFunctionResponse
	15, // 38: sift.user_defined_functions.v1.UserDefinedFunctionService.CheckUpdatableFields:output_type -> sift.user_defined_functions.v1.CheckUpdatableFieldsResponse
	17, // 39: sift.user_defined_functions.v1.UserDefinedFunctionService.ListUserDefinedFunctions:output_type -> sift.user_defined_functions.v1.ListUserDefinedFunctionsResponse
	19, // 40: sift.user_defined_functions.v1.UserDefinedFunctionService.ListUserDefinedFunctionVersions:output_type -> sift.user_defined_functions.v1.ListUserDefinedFunctionVersionsResponse
	31, // [31:41] is the sub-list for method output_type
	21, // [21:31] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_sift_user_defined_functions_v1_user_defined_functions_proto_init() }
func file_sift_user_defined_functions_v1_user_defined_functions_proto_init() {
	if File_sift_user_defined_functions_v1_user_defined_functions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionDependentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionDependentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDefinedFunctionVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDefinedFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserDefinedFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserDefinedFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserDefinedFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDefinedFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDefinedFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUpdatableFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUpdatableFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserDefinedFunctionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserDefinedFunctionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserDefinedFunctionVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserDefinedFunctionVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserDefinedFunctionResponse_ErrorValidatingUserDefinedFunctionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateUserDefinedFunctionResponse_SuccessValidatingUserDefinedFunctionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionId)(nil),
		(*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionName)(nil),
		(*GetUserDefinedFunctionDependentsRequest_UserDefinedFunctionVersionId)(nil),
	}
	file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ValidateUserDefinedFunctionResponse_Error)(nil),
		(*ValidateUserDefinedFunctionResponse_Success)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sift_user_defined_functions_v1_user_defined_functions_proto_goTypes,
		DependencyIndexes: file_sift_user_defined_functions_v1_user_defined_functions_proto_depIdxs,
		MessageInfos:      file_sift_user_defined_functions_v1_user_defined_functions_proto_msgTypes,
	}.Build()
	File_sift_user_defined_functions_v1_user_defined_functions_proto = out.File
	file_sift_user_defined_functions_v1_user_defined_functions_proto_rawDesc = nil
	file_sift_user_defined_functions_v1_user_defined_functions_proto_goTypes = nil
	file_sift_user_defined_functions_v1_user_defined_functions_proto_depIdxs = nil
}
