// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sift/common/type/v1/resource_ref.proto

package typev1

import (
	_ "github.com/sift-stack/sift/go/gen/google/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResourceRef is meant to be embedded as a field in other resources. It's used by one resource to point to another resource.
// In a request, use the `find_by` field to select a resource to point to.
// In a response, the fields marked `google.api.field_behavior = OUTPUT_ONLY` will be populated by the backend.
type ResourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The global unique id of the resource, e.g. the asset_id, run_id, or report_id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// If a resource has a client_key associated with it, it will be included.
	ClientKey *string `protobuf:"bytes,2,opt,name=client_key,json=clientKey,proto3,oneof" json:"client_key,omitempty"`
	// The name of the resource.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Use this field to 'construct' a ResourceRef.
	// You can give just the name, id, or client_key and the backend will find the resource you're referring to.
	FindBy *FindResourceBy `protobuf:"bytes,4,opt,name=find_by,json=findBy,proto3" json:"find_by,omitempty"`
}

func (x *ResourceRef) Reset() {
	*x = ResourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_common_type_v1_resource_ref_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRef) ProtoMessage() {}

func (x *ResourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_sift_common_type_v1_resource_ref_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRef.ProtoReflect.Descriptor instead.
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return file_sift_common_type_v1_resource_ref_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceRef) GetClientKey() string {
	if x != nil && x.ClientKey != nil {
		return *x.ClientKey
	}
	return ""
}

func (x *ResourceRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceRef) GetFindBy() *FindResourceBy {
	if x != nil {
		return x.FindBy
	}
	return nil
}

type FindResourceBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*FindResourceBy_Id
	//	*FindResourceBy_ClientKey
	//	*FindResourceBy_Name
	Identifier isFindResourceBy_Identifier `protobuf_oneof:"identifier"`
	// When finding by `client_key` or `name`, the `organization_id` should also be specified.
	// Only required if the user belongs to more than one organization.
	OrganizationId string `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *FindResourceBy) Reset() {
	*x = FindResourceBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_common_type_v1_resource_ref_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindResourceBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResourceBy) ProtoMessage() {}

func (x *FindResourceBy) ProtoReflect() protoreflect.Message {
	mi := &file_sift_common_type_v1_resource_ref_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResourceBy.ProtoReflect.Descriptor instead.
func (*FindResourceBy) Descriptor() ([]byte, []int) {
	return file_sift_common_type_v1_resource_ref_proto_rawDescGZIP(), []int{1}
}

func (m *FindResourceBy) GetIdentifier() isFindResourceBy_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *FindResourceBy) GetId() string {
	if x, ok := x.GetIdentifier().(*FindResourceBy_Id); ok {
		return x.Id
	}
	return ""
}

func (x *FindResourceBy) GetClientKey() string {
	if x, ok := x.GetIdentifier().(*FindResourceBy_ClientKey); ok {
		return x.ClientKey
	}
	return ""
}

func (x *FindResourceBy) GetName() string {
	if x, ok := x.GetIdentifier().(*FindResourceBy_Name); ok {
		return x.Name
	}
	return ""
}

func (x *FindResourceBy) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type isFindResourceBy_Identifier interface {
	isFindResourceBy_Identifier()
}

type FindResourceBy_Id struct {
	// Find by the resource's global id, e.g. asset_id, run_id, report_id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type FindResourceBy_ClientKey struct {
	// Find by the resource's client_key, if available.
	ClientKey string `protobuf:"bytes,2,opt,name=client_key,json=clientKey,proto3,oneof"`
}

type FindResourceBy_Name struct {
	// Find by the resource's name. If multiple resources are found with the same name, an error will be returned.
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

func (*FindResourceBy_Id) isFindResourceBy_Identifier() {}

func (*FindResourceBy_ClientKey) isFindResourceBy_Identifier() {}

func (*FindResourceBy_Name) isFindResourceBy_Identifier() {}

var File_sift_common_type_v1_resource_ref_proto protoreflect.FileDescriptor

var file_sift_common_type_v1_resource_ref_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x04,
	0x52, 0x06, 0x66, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42,
	0xd8, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x66, 0x74,
	0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x53, 0x43, 0x54, 0xaa, 0x02, 0x13, 0x53, 0x69, 0x66, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x53, 0x69, 0x66, 0x74,
	0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x54, 0x79, 0x70, 0x65, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1f, 0x53, 0x69, 0x66, 0x74, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x54, 0x79,
	0x70, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x16, 0x53, 0x69, 0x66, 0x74, 0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x3a, 0x3a, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sift_common_type_v1_resource_ref_proto_rawDescOnce sync.Once
	file_sift_common_type_v1_resource_ref_proto_rawDescData = file_sift_common_type_v1_resource_ref_proto_rawDesc
)

func file_sift_common_type_v1_resource_ref_proto_rawDescGZIP() []byte {
	file_sift_common_type_v1_resource_ref_proto_rawDescOnce.Do(func() {
		file_sift_common_type_v1_resource_ref_proto_rawDescData = protoimpl.X.CompressGZIP(file_sift_common_type_v1_resource_ref_proto_rawDescData)
	})
	return file_sift_common_type_v1_resource_ref_proto_rawDescData
}

var file_sift_common_type_v1_resource_ref_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sift_common_type_v1_resource_ref_proto_goTypes = []interface{}{
	(*ResourceRef)(nil),    // 0: sift.common.type.v1.ResourceRef
	(*FindResourceBy)(nil), // 1: sift.common.type.v1.FindResourceBy
}
var file_sift_common_type_v1_resource_ref_proto_depIdxs = []int32{
	1, // 0: sift.common.type.v1.ResourceRef.find_by:type_name -> sift.common.type.v1.FindResourceBy
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sift_common_type_v1_resource_ref_proto_init() }
func file_sift_common_type_v1_resource_ref_proto_init() {
	if File_sift_common_type_v1_resource_ref_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sift_common_type_v1_resource_ref_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_common_type_v1_resource_ref_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindResourceBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sift_common_type_v1_resource_ref_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_sift_common_type_v1_resource_ref_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*FindResourceBy_Id)(nil),
		(*FindResourceBy_ClientKey)(nil),
		(*FindResourceBy_Name)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sift_common_type_v1_resource_ref_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sift_common_type_v1_resource_ref_proto_goTypes,
		DependencyIndexes: file_sift_common_type_v1_resource_ref_proto_depIdxs,
		MessageInfos:      file_sift_common_type_v1_resource_ref_proto_msgTypes,
	}.Build()
	File_sift_common_type_v1_resource_ref_proto = out.File
	file_sift_common_type_v1_resource_ref_proto_rawDesc = nil
	file_sift_common_type_v1_resource_ref_proto_goTypes = nil
	file_sift_common_type_v1_resource_ref_proto_depIdxs = nil
}
