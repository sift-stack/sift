// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sift/dlq_errors/v2/dlq_errors.proto

package dlq_errorsv2

import (
	_ "github.com/sift-stack/sift/go/gen/google/api"
	_ "github.com/sift-stack/sift/go/gen/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDlqErrorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of errors values to return.
	// The service may return fewer than this value.
	// If unspecified, at most 50 values will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListDlqErrors` call.
	// Provide this to retrieve the subsequent page.
	//
	// When paginating, all other parameters provided to `ListDlqErrors` must match
	// the call that provided the page token.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A Common Expression Language (CEL, https://github.com/google/cel-spec) filter string.
	// Available tag variables are:
	// - min_timestamp
	// - max_timestamp
	// - asset_id
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// How to order the retrieved campaigns. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
	// Available fields to order_by are `min_timestamp`, `max_timestamp`, and `asset_id`.
	// If left empty, items are ordered by `min_timestamp` in ascending order (oldest-first).
	// For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
	// Example: "asset_id desc,min_timestamp"
	OrderBy string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListDlqErrorsRequest) Reset() {
	*x = ListDlqErrorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDlqErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDlqErrorsRequest) ProtoMessage() {}

func (x *ListDlqErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDlqErrorsRequest.ProtoReflect.Descriptor instead.
func (*ListDlqErrorsRequest) Descriptor() ([]byte, []int) {
	return file_sift_dlq_errors_v2_dlq_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ListDlqErrorsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDlqErrorsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDlqErrorsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDlqErrorsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ErrorSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count            uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	AssetName        *string                `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3,oneof" json:"asset_name,omitempty"`
	MinTimestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=min_timestamp,json=minTimestamp,proto3" json:"min_timestamp,omitempty"`
	MaxTimestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=max_timestamp,json=maxTimestamp,proto3" json:"max_timestamp,omitempty"`
	DlqParquetFileId string                 `protobuf:"bytes,5,opt,name=dlq_parquet_file_id,json=dlqParquetFileId,proto3" json:"dlq_parquet_file_id,omitempty"`
	CreatedDate      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	ModifiedDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=modified_date,json=modifiedDate,proto3" json:"modified_date,omitempty"`
}

func (x *ErrorSummary) Reset() {
	*x = ErrorSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorSummary) ProtoMessage() {}

func (x *ErrorSummary) ProtoReflect() protoreflect.Message {
	mi := &file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorSummary.ProtoReflect.Descriptor instead.
func (*ErrorSummary) Descriptor() ([]byte, []int) {
	return file_sift_dlq_errors_v2_dlq_errors_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorSummary) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ErrorSummary) GetAssetName() string {
	if x != nil && x.AssetName != nil {
		return *x.AssetName
	}
	return ""
}

func (x *ErrorSummary) GetMinTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.MinTimestamp
	}
	return nil
}

func (x *ErrorSummary) GetMaxTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.MaxTimestamp
	}
	return nil
}

func (x *ErrorSummary) GetDlqParquetFileId() string {
	if x != nil {
		return x.DlqParquetFileId
	}
	return ""
}

func (x *ErrorSummary) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ErrorSummary) GetModifiedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

type ListDlqErrorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorSummaries []*ErrorSummary `protobuf:"bytes,1,rep,name=error_summaries,json=errorSummaries,proto3" json:"error_summaries,omitempty"`
	NextPageToken  string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDlqErrorsResponse) Reset() {
	*x = ListDlqErrorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDlqErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDlqErrorsResponse) ProtoMessage() {}

func (x *ListDlqErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDlqErrorsResponse.ProtoReflect.Descriptor instead.
func (*ListDlqErrorsResponse) Descriptor() ([]byte, []int) {
	return file_sift_dlq_errors_v2_dlq_errors_proto_rawDescGZIP(), []int{2}
}

func (x *ListDlqErrorsResponse) GetErrorSummaries() []*ErrorSummary {
	if x != nil {
		return x.ErrorSummaries
	}
	return nil
}

func (x *ListDlqErrorsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_sift_dlq_errors_v2_dlq_errors_proto protoreflect.FileDescriptor

var file_sift_dlq_errors_v2_dlq_errors_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x64, 0x6c, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x6c, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x64, 0x6c, 0x71, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xab, 0x03, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x44, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x13, 0x64, 0x6c, 0x71, 0x5f, 0x70, 0x61,
	0x72, 0x71, 0x75, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x64, 0x6c, 0x71, 0x50, 0x61, 0x72,
	0x71, 0x75, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6c, 0x71, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x64, 0x6c,
	0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x80, 0x02, 0x0a, 0x10, 0x44,
	0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xeb, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x28, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x64, 0x6c, 0x71, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6c, 0x71, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x69,
	0x66, 0x74, 0x2e, 0x64, 0x6c, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x92, 0x41, 0x67, 0x12, 0x27, 0x4c, 0x69,
	0x73, 0x74, 0x20, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x44, 0x65, 0x61,
	0x64, 0x20, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x20, 0x51, 0x75, 0x65, 0x75, 0x65, 0x20, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x2e, 0x2a, 0x20, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x56, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x32, 0x2f, 0x64, 0x6c, 0x71, 0x2d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x42, 0xea, 0x01,
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x69, 0x66, 0x74, 0x2e, 0x64, 0x6c, 0x71, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x76, 0x32, 0x42, 0x0e, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x66, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2f, 0x73, 0x69, 0x66, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x69,
	0x66, 0x74, 0x2f, 0x64, 0x6c, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x32,
	0x3b, 0x64, 0x6c, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x76, 0x32, 0xa2, 0x02, 0x03,
	0x53, 0x44, 0x58, 0xaa, 0x02, 0x11, 0x53, 0x69, 0x66, 0x74, 0x2e, 0x44, 0x6c, 0x71, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x11, 0x53, 0x69, 0x66, 0x74, 0x5c, 0x44,
	0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1d, 0x53, 0x69,
	0x66, 0x74, 0x5c, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x5c, 0x56, 0x32, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x53, 0x69,
	0x66, 0x74, 0x3a, 0x3a, 0x44, 0x6c, 0x71, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x3a, 0x3a, 0x56,
	0x32, 0x92, 0x41, 0x16, 0x12, 0x14, 0x0a, 0x12, 0x44, 0x4c, 0x51, 0x20, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sift_dlq_errors_v2_dlq_errors_proto_rawDescOnce sync.Once
	file_sift_dlq_errors_v2_dlq_errors_proto_rawDescData = file_sift_dlq_errors_v2_dlq_errors_proto_rawDesc
)

func file_sift_dlq_errors_v2_dlq_errors_proto_rawDescGZIP() []byte {
	file_sift_dlq_errors_v2_dlq_errors_proto_rawDescOnce.Do(func() {
		file_sift_dlq_errors_v2_dlq_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_sift_dlq_errors_v2_dlq_errors_proto_rawDescData)
	})
	return file_sift_dlq_errors_v2_dlq_errors_proto_rawDescData
}

var file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sift_dlq_errors_v2_dlq_errors_proto_goTypes = []interface{}{
	(*ListDlqErrorsRequest)(nil),  // 0: sift.dlq_errors.v2.ListDlqErrorsRequest
	(*ErrorSummary)(nil),          // 1: sift.dlq_errors.v2.ErrorSummary
	(*ListDlqErrorsResponse)(nil), // 2: sift.dlq_errors.v2.ListDlqErrorsResponse
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_sift_dlq_errors_v2_dlq_errors_proto_depIdxs = []int32{
	3, // 0: sift.dlq_errors.v2.ErrorSummary.min_timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: sift.dlq_errors.v2.ErrorSummary.max_timestamp:type_name -> google.protobuf.Timestamp
	3, // 2: sift.dlq_errors.v2.ErrorSummary.created_date:type_name -> google.protobuf.Timestamp
	3, // 3: sift.dlq_errors.v2.ErrorSummary.modified_date:type_name -> google.protobuf.Timestamp
	1, // 4: sift.dlq_errors.v2.ListDlqErrorsResponse.error_summaries:type_name -> sift.dlq_errors.v2.ErrorSummary
	0, // 5: sift.dlq_errors.v2.DlqErrorsService.ListDlqErrors:input_type -> sift.dlq_errors.v2.ListDlqErrorsRequest
	2, // 6: sift.dlq_errors.v2.DlqErrorsService.ListDlqErrors:output_type -> sift.dlq_errors.v2.ListDlqErrorsResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sift_dlq_errors_v2_dlq_errors_proto_init() }
func file_sift_dlq_errors_v2_dlq_errors_proto_init() {
	if File_sift_dlq_errors_v2_dlq_errors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDlqErrorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDlqErrorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sift_dlq_errors_v2_dlq_errors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sift_dlq_errors_v2_dlq_errors_proto_goTypes,
		DependencyIndexes: file_sift_dlq_errors_v2_dlq_errors_proto_depIdxs,
		MessageInfos:      file_sift_dlq_errors_v2_dlq_errors_proto_msgTypes,
	}.Build()
	File_sift_dlq_errors_v2_dlq_errors_proto = out.File
	file_sift_dlq_errors_v2_dlq_errors_proto_rawDesc = nil
	file_sift_dlq_errors_v2_dlq_errors_proto_goTypes = nil
	file_sift_dlq_errors_v2_dlq_errors_proto_depIdxs = nil
}
