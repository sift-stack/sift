<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_F_CreateRunMessage" Id="{c8036387-84d4-48a0-9429-9a51227f44ca}" SpecialFunc="None">
    <Declaration><![CDATA[// Creates a Sift Proxy Protocol "create_run" Endpoint Message.
FUNCTION _F_CreateRunMessage
VAR_INPUT
	sName : STRING(255);
	sDescription : STRING(255);
	aTags : ARRAY[0..SiftClientParameters.MAX_NUM_TAGS - 1] OF STRING(255);
	stMsg : REFERENCE TO _ST_SiftMessage;
	pJsonBuffer : POINTER TO BYTE;
	nLength : UDINT;
END_VAR

VAR
	fbJson : FB_JsonSaxWriter;
	i : UDINT;
	nBytes : UDINT;
	pJsonString: POINTER TO STRING;
END_VAR

VAR_OUTPUT
	stErr : ST_SiftError;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF pJsonBuffer = 0 THEN
	stErr.bError := TRUE;
	stErr.nErrId := GVL_SIFT.NULL_JSON_POINTER;
	stErr.sReason := 'The JSON buffer is null';
	RETURN;
END_IF

fbJson.StartObject();

fbJson.AddKey('name');
fbJson.AddString(sName);

fbJson.AddKey('description');
fbJson.AddString(sDescription);

fbJson.AddKey('tags');
fbJson.StartArray();
FOR i := 1 TO SiftClientParameters.MAX_NUM_TAGS DO
	IF LEN(aTags[i-1]) > 0 THEN
		 fbJson.AddString(aTags[i-1]);
	END_IF
END_FOR
fbJson.EndArray();

fbJson.EndObject();

pJsonString := pJsonBuffer;
nBytes := fbJson.CopyDocument(pJsonString^, nLength);
IF nBytes = 0 THEN
	stErr.nErrId := GVL_SIFT.JSON_CAPACITY_REACHED;
	stErr.bError := TRUE;
	stErr.sReason := CONCAT(
		CONCAT('JSON msg too large: ', UDINT_TO_STRING(fbJson.GetDocumentLength())),
		' endpoint=create_run',
	);
	RETURN;
END_IF

stErr := _F_CreateEndpointMessage(sEndpoint:='create_run', 
								  pData:=pJsonString, 
								  nLength:=nBytes-1, 
                                  nBufferLength := nLength, 
                                  stMsg:=stMsg);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>