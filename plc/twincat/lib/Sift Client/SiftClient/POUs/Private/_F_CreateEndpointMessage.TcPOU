<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_F_CreateEndpointMessage" Id="{29c18fff-a10c-4ec1-8c4f-ee834e24bbff}" SpecialFunc="None">
    <Declaration><![CDATA[// Creates a Sift Proxy Protocol Endpoint Message.
FUNCTION _F_CreateEndpointMessage 
VAR_INPUT
	sEndpoint : STRING; 
	pData : POINTER TO STRING;
	nLength : UDINT;
	nBufferLength : UDINT;
	stMsg : REFERENCE TO _ST_SiftMessage;
END_VAR

VAR
	fbJson : FB_JsonSaxWriter;
	nBytes : UDINT;
END_VAR

VAR_OUTPUT
	stErr : ST_SiftError;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF nLength > nBufferLength THEN
	stErr.bError := TRUE;
	stErr.nErrId := GVL_SIFT.JSON_CAPACITY_REACHED;
	stErr.sReason := CONCAT(
		CONCAT('JSON msg too large: ', UDINT_TO_STRING(nLength)),
		CONCAT(' endpoint= ', sEndpoint),
	);
END_IF

fbJson.StartObject();
fbJson.AddKey('endpoint');
fbJson.AddString(sEndpoint);
fbJson.AddKey('data');
fbJson.AddRawObject(pData^);
fbJson.EndObject();

nBytes := fbJson.CopyDocument(pData^, nBufferLength);

IF nBytes = 0 THEN
	stErr.bError := TRUE;
	stErr.nErrId := GVL_SIFT.JSON_CAPACITY_REACHED;
	RETURN;
END_IF

// Omit null delimeter.
nBytes := nBytes - 1;

IF nBytes > SIZEOF(stMsg.aData) THEN
	stErr.bError := TRUE;
	stErr.nErrId := GVL_SIFT.BUFFER_CAPACITY_REACHED;
	stErr.sReason := CONCAT(
		CONCAT('Increase MAX_PACKET_SIZE. Message is too large: ', UDINT_TO_STRING(nBytes)),
		CONCAT(' endpoint= ', sEndpoint),
	);
	RETURN;
END_IF

IF NOT SAFE_MEMCPY(ADR(stMsg.aData), SIZEOF(stMsg.aData), 
				   pData, nBytes) THEN
	stErr.bError := TRUE;
	stErr.nErrId := GVL_SIFT.MEMCPY_ERROR;
	stErr.sReason := 'MEMCPY failed in CreateEndpointMessage';
	RETURN;
END_IF

stMsg.nType := GVL_SIFT.ENDPOINT_MESSAGE_TYPE;
stMsg.nLength := nBytes;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>