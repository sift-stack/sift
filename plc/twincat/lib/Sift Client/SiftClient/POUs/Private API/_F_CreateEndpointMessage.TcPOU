<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_F_CreateEndpointMessage" Id="{29c18fff-a10c-4ec1-8c4f-ee834e24bbff}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION _F_CreateEndpointMessage 
VAR_INPUT
	sEndpoint : STRING; 
	pData : POINTER TO STRING;
	nLength : UDINT;
	stMsg : REFERENCE TO _ST_SiftMessage;
END_VAR

VAR
	fbJson : FB_JsonSaxWriter;
	sBuffer : STRING(GVL_SIFT.MAX_JSON_SIZE);
	nBytes : UDINT;
END_VAR

VAR_OUTPUT
	stErr : ST_SiftError;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* TODO: Use library constant for stMsg max length *)
IF nLength > GVL_SIFT.MAX_JSON_SIZE THEN
	stErr.bError := TRUE;
	stErr.nErrId := 1;
END_IF

fbJson.StartObject();
fbJson.AddKey('endpoint');
fbJson.AddString(sEndpoint);
fbJson.AddKey('data');
fbJson.AddRawObject(pData^);
fbJson.EndObject();

nBytes := fbJson.CopyDocument(sBuffer, GVL_SIFT.MAX_JSON_SIZE) - 1;  (* Omit null delimeter *)

IF nBytes > GVL_SIFT.MAX_JSON_SIZE THEN
	stErr.bError := TRUE;
	stErr.nErrId := GVL_SIFT.BUFFER_CAPACITY_REACHED;
	RETURN;
END_IF

MEMCPY(ADR(stMsg.aData), ADR(sBuffer), nBytes);
stMsg.nType := 1;
stMsg.nLength := nBytes;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>