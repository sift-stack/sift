"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sift.common.type.v1.channel_bit_field_element_pb2
import sift.common.type.v1.channel_data_type_pb2
import sift.common.type.v1.channel_enum_type_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class IngestionConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIG_ID_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    CLIENT_KEY_FIELD_NUMBER: builtins.int
    ingestion_config_id: builtins.str
    asset_id: builtins.str
    client_key: builtins.str
    def __init__(
        self,
        *,
        ingestion_config_id: builtins.str = ...,
        asset_id: builtins.str = ...,
        client_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["asset_id", b"asset_id", "client_key", b"client_key", "ingestion_config_id", b"ingestion_config_id"]) -> None: ...

global___IngestionConfig = IngestionConfig

@typing.final
class FlowConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def channels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChannelConfig]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        channels: collections.abc.Iterable[global___ChannelConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["channels", b"channels", "name", b"name"]) -> None: ...

global___FlowConfig = FlowConfig

@typing.final
class ChannelConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    COMPONENT_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    ENUM_TYPES_FIELD_NUMBER: builtins.int
    BIT_FIELD_ELEMENTS_FIELD_NUMBER: builtins.int
    name: builtins.str
    component: builtins.str
    unit: builtins.str
    description: builtins.str
    data_type: sift.common.type.v1.channel_data_type_pb2.ChannelDataType.ValueType
    @property
    def enum_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[sift.common.type.v1.channel_enum_type_pb2.ChannelEnumType]: ...
    @property
    def bit_field_elements(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[sift.common.type.v1.channel_bit_field_element_pb2.ChannelBitFieldElement]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        component: builtins.str = ...,
        unit: builtins.str = ...,
        description: builtins.str = ...,
        data_type: sift.common.type.v1.channel_data_type_pb2.ChannelDataType.ValueType = ...,
        enum_types: collections.abc.Iterable[sift.common.type.v1.channel_enum_type_pb2.ChannelEnumType] | None = ...,
        bit_field_elements: collections.abc.Iterable[sift.common.type.v1.channel_bit_field_element_pb2.ChannelBitFieldElement] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["bit_field_elements", b"bit_field_elements", "component", b"component", "data_type", b"data_type", "description", b"description", "enum_types", b"enum_types", "name", b"name", "unit", b"unit"]) -> None: ...

global___ChannelConfig = ChannelConfig

@typing.final
class GetIngestionConfigRequest(google.protobuf.message.Message):
    """The request for a call to `IngestionConfigService_GetIngestionConfig` to retrieve an ingestion config."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIG_ID_FIELD_NUMBER: builtins.int
    ingestion_config_id: builtins.str
    def __init__(
        self,
        *,
        ingestion_config_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ingestion_config_id", b"ingestion_config_id"]) -> None: ...

global___GetIngestionConfigRequest = GetIngestionConfigRequest

@typing.final
class GetIngestionConfigResponse(google.protobuf.message.Message):
    """The result of a call to `IngestionConfigService_GetIngestionConfig`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def ingestion_config(self) -> global___IngestionConfig: ...
    def __init__(
        self,
        *,
        ingestion_config: global___IngestionConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["ingestion_config", b"ingestion_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["ingestion_config", b"ingestion_config"]) -> None: ...

global___GetIngestionConfigResponse = GetIngestionConfigResponse

@typing.final
class CreateIngestionConfigRequest(google.protobuf.message.Message):
    """The request for a call to `IngestionConfigService_ListIngestionConfigs` to retrieve ingestion configs."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_NAME_FIELD_NUMBER: builtins.int
    FLOWS_FIELD_NUMBER: builtins.int
    ORGANIZATION_ID_FIELD_NUMBER: builtins.int
    CLIENT_KEY_FIELD_NUMBER: builtins.int
    asset_name: builtins.str
    organization_id: builtins.str
    client_key: builtins.str
    """The `client_key` field is a user-defined string you can supply to uniquely identify
    an ingestion config (and retrieve it via `GetIngestionConfig`).
    An error is returned if you try to create an ingestion config with a
    client_key that already exists.
    """
    @property
    def flows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowConfig]: ...
    def __init__(
        self,
        *,
        asset_name: builtins.str = ...,
        flows: collections.abc.Iterable[global___FlowConfig] | None = ...,
        organization_id: builtins.str = ...,
        client_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["asset_name", b"asset_name", "client_key", b"client_key", "flows", b"flows", "organization_id", b"organization_id"]) -> None: ...

global___CreateIngestionConfigRequest = CreateIngestionConfigRequest

@typing.final
class CreateIngestionConfigResponse(google.protobuf.message.Message):
    """The result of a call to `IngestionConfigService_CreateIngestionConfig`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def ingestion_config(self) -> global___IngestionConfig: ...
    def __init__(
        self,
        *,
        ingestion_config: global___IngestionConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["ingestion_config", b"ingestion_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["ingestion_config", b"ingestion_config"]) -> None: ...

global___CreateIngestionConfigResponse = CreateIngestionConfigResponse

@typing.final
class ListIngestionConfigsRequest(google.protobuf.message.Message):
    """The request for a call to `IngestionConfigService_ListIngestionConfigs` to retrieve ingestion configs."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    page_size: builtins.int
    """The maximum number of ingestion configs to return. The service may return fewer than this value.
    If unspecified, at most 50 ingestion configs will be returned. The maximum value is 1000; values above
    1000 will be coerced to 1000. Optional.
    """
    page_token: builtins.str
    """A page token, received from a previous `ListIngestionConfigs` call.
    Provide this to retrieve the subsequent page.
    When paginating, all other parameters provided to `ListIngestionConfigs` must match
    the call that provided the page token. Optional.
    """
    filter: builtins.str
    """A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
    Available fields to filter by are `ingestion_config_id`, `client_key`, `asset_id`, `created_date`, and `modified_date`.
    For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
    For more information about the fields used for filtering, please refer to [this definition](/protocol-buffers/documentation#ingestionconfigservice). Optional.
    """
    def __init__(
        self,
        *,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListIngestionConfigsRequest = ListIngestionConfigsRequest

@typing.final
class ListIngestionConfigsResponse(google.protobuf.message.Message):
    """The result of a call to `IngestionConfigService_ListIngestionConfigs`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    @property
    def ingestion_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IngestionConfig]: ...
    def __init__(
        self,
        *,
        ingestion_configs: collections.abc.Iterable[global___IngestionConfig] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ingestion_configs", b"ingestion_configs", "next_page_token", b"next_page_token"]) -> None: ...

global___ListIngestionConfigsResponse = ListIngestionConfigsResponse

@typing.final
class CreateIngestionConfigFlowsRequest(google.protobuf.message.Message):
    """The request for a call to `IngestionConfigService_CreateIngestionConfigFlows` to create ingestion config flows."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIG_ID_FIELD_NUMBER: builtins.int
    FLOWS_FIELD_NUMBER: builtins.int
    ingestion_config_id: builtins.str
    @property
    def flows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowConfig]:
        """These flows must have unique names. If you try to send a flow with a name that already exists for an ingestion config, it will return an error."""

    def __init__(
        self,
        *,
        ingestion_config_id: builtins.str = ...,
        flows: collections.abc.Iterable[global___FlowConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["flows", b"flows", "ingestion_config_id", b"ingestion_config_id"]) -> None: ...

global___CreateIngestionConfigFlowsRequest = CreateIngestionConfigFlowsRequest

@typing.final
class CreateIngestionConfigFlowsResponse(google.protobuf.message.Message):
    """The result of a call to `IngestionConfigService_CreateIngestionConfigFlows`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___CreateIngestionConfigFlowsResponse = CreateIngestionConfigFlowsResponse

@typing.final
class ListIngestionConfigFlowsRequest(google.protobuf.message.Message):
    """The request for a call to `IngestionConfigService_ListIngestionConfigFlows` to retrieve ingestion config flows."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INGESTION_CONFIG_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ingestion_config_id: builtins.str
    page_size: builtins.int
    """The maximum number of ingestion config flows to return. The service may return fewer than this value.
    If unspecified, at most 50 ingestion config flows will be returned. The maximum value is 1000; values above
    1000 will be coerced to 1000. Optional.
    """
    page_token: builtins.str
    """A page token, received from a previous `ListIngestionConfigFlows` call.
    Provide this to retrieve the subsequent page.
    When paginating, all other parameters provided to `ListIngestionConfigFlows` must match
    the call that provided the page token. Optional.
    """
    filter: builtins.str
    """A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
    Available fields to filter by are `flow_name`, `flow_id`, `created_date`, and `modified_date`.
    For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
    For more information about the fields used for filtering, please refer to [this definition](/protocol-buffers/documentation#ingestionconfig). Optional.
    """
    def __init__(
        self,
        *,
        ingestion_config_id: builtins.str = ...,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "ingestion_config_id", b"ingestion_config_id", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListIngestionConfigFlowsRequest = ListIngestionConfigFlowsRequest

@typing.final
class ListIngestionConfigFlowsResponse(google.protobuf.message.Message):
    """The result of a call to `IngestionConfigService_ListIngestionConfigFlows`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FLOWS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    @property
    def flows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowConfig]: ...
    def __init__(
        self,
        *,
        flows: collections.abc.Iterable[global___FlowConfig] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["flows", b"flows", "next_page_token", b"next_page_token"]) -> None: ...

global___ListIngestionConfigFlowsResponse = ListIngestionConfigFlowsResponse
