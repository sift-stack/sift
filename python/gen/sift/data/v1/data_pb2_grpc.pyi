"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import sift.data.v1.data_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class DataServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetData: grpc.UnaryUnaryMultiCallable[
        sift.data.v1.data_pb2.GetDataRequest,
        sift.data.v1.data_pb2.GetDataResponse,
    ]
    """Query data"""

class DataServiceAsyncStub:
    GetData: grpc.aio.UnaryUnaryMultiCallable[
        sift.data.v1.data_pb2.GetDataRequest,
        sift.data.v1.data_pb2.GetDataResponse,
    ]
    """Query data"""

class DataServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetData(
        self,
        request: sift.data.v1.data_pb2.GetDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.data.v1.data_pb2.GetDataResponse, collections.abc.Awaitable[sift.data.v1.data_pb2.GetDataResponse]]:
        """Query data"""

def add_DataServiceServicer_to_server(servicer: DataServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
