# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sift.calculated_channels.v1 import calculated_channels_pb2 as sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2


class CalculatedChannelsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListExpressionIdentifiers = channel.unary_unary(
                '/sift.calculated_channels.v1.CalculatedChannelsService/ListExpressionIdentifiers',
                request_serializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ListExpressionIdentifiersRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ListExpressionIdentifiersResponse.FromString,
                )
        self.ValidateExpression = channel.unary_unary(
                '/sift.calculated_channels.v1.CalculatedChannelsService/ValidateExpression',
                request_serializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ValidateExpressionRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ValidateExpressionResponse.FromString,
                )


class CalculatedChannelsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListExpressionIdentifiers(self, request, context):
        """Retrieves a list of valid identifiers that can be used as part of a calculated channel expression.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateExpression(self, request, context):
        """Used to validate whether or not an expression used for a calculated channel is valid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalculatedChannelsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListExpressionIdentifiers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExpressionIdentifiers,
                    request_deserializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ListExpressionIdentifiersRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ListExpressionIdentifiersResponse.SerializeToString,
            ),
            'ValidateExpression': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateExpression,
                    request_deserializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ValidateExpressionRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ValidateExpressionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sift.calculated_channels.v1.CalculatedChannelsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CalculatedChannelsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListExpressionIdentifiers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v1.CalculatedChannelsService/ListExpressionIdentifiers',
            sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ListExpressionIdentifiersRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ListExpressionIdentifiersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateExpression(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v1.CalculatedChannelsService/ValidateExpression',
            sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ValidateExpressionRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v1_dot_calculated__channels__pb2.ValidateExpressionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
