# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: sift/saved_searches/v1/saved_searches.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "BatchDeleteSavedSearchesRequest",
    "BatchDeleteSavedSearchesResponse",
    "CreateSavedSearchRequest",
    "CreateSavedSearchResponse",
    "DeleteSavedSearchRequest",
    "DeleteSavedSearchResponse",
    "GetSavedSearchRequest",
    "GetSavedSearchResponse",
    "ListSavedSearchesRequest",
    "ListSavedSearchesResponse",
    "SavedSearch",
    "SavedSearchFilterItem",
    "SavedSearchProperties",
    "UpdateSavedSearchRequest",
    "UpdateSavedSearchResponse",
    "SavedSearchServiceStub",
    "SavedSearchServiceBase",
)

import datetime
from dataclasses import dataclass
from typing import TYPE_CHECKING

import betterproto2
import grpc
import grpclib
from betterproto2.grpc.grpclib_server import ServiceBase

from ....message_pool import default_message_pool

if TYPE_CHECKING:
    import grpclib.server
    from betterproto2.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline

betterproto2.check_compiler_version("0.4.0")


@dataclass(eq=False, repr=False)
class BatchDeleteSavedSearchesRequest(betterproto2.Message):
    """
    The request for a call to `SavedSearchService_BatchDeleteSavedSearches` to delete saved searches.
    """

    saved_search_ids: "list[str]" = betterproto2.field(
        1, betterproto2.TYPE_STRING, repeated=True
    )
    """
    Limit of 1000 searches per batch
    """


default_message_pool.register_message(
    "sift.saved_searches.v1",
    "BatchDeleteSavedSearchesRequest",
    BatchDeleteSavedSearchesRequest,
)


@dataclass(eq=False, repr=False)
class BatchDeleteSavedSearchesResponse(betterproto2.Message):
    """
    The response of a call to `SavedSearchService_BatchDeleteSavedSearches`.
    """

    pass


default_message_pool.register_message(
    "sift.saved_searches.v1",
    "BatchDeleteSavedSearchesResponse",
    BatchDeleteSavedSearchesResponse,
)


@dataclass(eq=False, repr=False)
class CreateSavedSearchRequest(betterproto2.Message):
    """
    The request for a call to `SavedSearchService_CreateSavedSearch` to create a saved search.
    """

    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    properties: "SavedSearchProperties | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    organization_id: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    This field is only required if your user belongs to multiple organizations.
    """


default_message_pool.register_message(
    "sift.saved_searches.v1", "CreateSavedSearchRequest", CreateSavedSearchRequest
)


@dataclass(eq=False, repr=False)
class CreateSavedSearchResponse(betterproto2.Message):
    """
    The response for a call to `SavedSearchService_CreateSavedResponse`.
    """

    saved_search: "SavedSearch | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "sift.saved_searches.v1", "CreateSavedSearchResponse", CreateSavedSearchResponse
)


@dataclass(eq=False, repr=False)
class DeleteSavedSearchRequest(betterproto2.Message):
    """
    The request for a call to `SavedSearchService_DeleteSavedSearch` to delete a saved search.
    """

    saved_search_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "sift.saved_searches.v1", "DeleteSavedSearchRequest", DeleteSavedSearchRequest
)


@dataclass(eq=False, repr=False)
class DeleteSavedSearchResponse(betterproto2.Message):
    """
    The response of a call to `SavedSearchService_DeleteSavedSearch`.
    """

    pass


default_message_pool.register_message(
    "sift.saved_searches.v1", "DeleteSavedSearchResponse", DeleteSavedSearchResponse
)


@dataclass(eq=False, repr=False)
class GetSavedSearchRequest(betterproto2.Message):
    """
    The request for a call to `SavedSearchService_GetSavedSearch` to retrieve a saved search;
    """

    saved_search_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "sift.saved_searches.v1", "GetSavedSearchRequest", GetSavedSearchRequest
)


@dataclass(eq=False, repr=False)
class GetSavedSearchResponse(betterproto2.Message):
    """
    The response of a call to `SavedSearchService_GetSavedSearch`.
    """

    saved_search: "SavedSearch | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "sift.saved_searches.v1", "GetSavedSearchResponse", GetSavedSearchResponse
)


@dataclass(eq=False, repr=False)
class ListSavedSearchesRequest(betterproto2.Message):
    """
    The request for a call to `SavedSearchService_ListSavedSearches` to retrieve saved searches.
    """

    page_size: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)
    """
    The maximum number of saved searches to return. The service may return fewer than this value.
    If unspecified, at most 50 saved searches will be returned. The maximum value is 1000; values above
    1000 will be coerced to 1000. Optional.
    """

    page_token: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    A page token, received from a previous `ListSavedSearches` call.
    Provide this to retrieve the subsequent page.
    When paginating, all other parameters provided to `ListSavedSearches` must match
    the call that provided the page token. Optional.
    """

    filter: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
    Available fields to filter by are 'name' and 'saved_search_id'.
    For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
    For more information about the fields used for filtering, please refer to [this definition](/docs/api/grpc/protocol-buffers/saved_searches#savedsearch). Optional.
    """

    organization_id: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)
    """
    This field is only required if your user belongs to multiple organizations.
    """


default_message_pool.register_message(
    "sift.saved_searches.v1", "ListSavedSearchesRequest", ListSavedSearchesRequest
)


@dataclass(eq=False, repr=False)
class ListSavedSearchesResponse(betterproto2.Message):
    """
    The response of a call to `SavedSearchService_ListSavedSearchesResponse`.
    """

    saved_searches: "list[SavedSearch]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )

    next_page_token: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "sift.saved_searches.v1", "ListSavedSearchesResponse", ListSavedSearchesResponse
)


@dataclass(eq=False, repr=False)
class SavedSearch(betterproto2.Message):
    saved_search_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    organization_id: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    name: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    properties: "SavedSearchProperties | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    created_by_user_id: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    modified_by_user_id: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    created_date: "datetime.datetime | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    modified_date: "datetime.datetime | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "sift.saved_searches.v1", "SavedSearch", SavedSearch
)


@dataclass(eq=False, repr=False)
class SavedSearchFilterItem(betterproto2.Message):
    id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    name: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "sift.saved_searches.v1", "SavedSearchFilterItem", SavedSearchFilterItem
)


@dataclass(eq=False, repr=False)
class SavedSearchProperties(betterproto2.Message):
    overview_mode: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    search_term: "str | None" = betterproto2.field(
        2, betterproto2.TYPE_STRING, optional=True
    )

    from_date_time: "datetime.datetime | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )

    to_date_time: "datetime.datetime | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    asset_items: "list[SavedSearchFilterItem]" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, repeated=True
    )

    user_items: "list[SavedSearchFilterItem]" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, repeated=True
    )

    tag_items: "list[SavedSearchFilterItem]" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, repeated=True
    )

    annotation_items: "list[SavedSearchFilterItem]" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, repeated=True
    )

    run_items: "list[SavedSearchFilterItem]" = betterproto2.field(
        9, betterproto2.TYPE_MESSAGE, repeated=True
    )

    report_template_items: "list[SavedSearchFilterItem]" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, repeated=True
    )

    show_advanced_filters: "bool | None" = betterproto2.field(
        11, betterproto2.TYPE_BOOL, optional=True
    )


default_message_pool.register_message(
    "sift.saved_searches.v1", "SavedSearchProperties", SavedSearchProperties
)


@dataclass(eq=False, repr=False)
class UpdateSavedSearchRequest(betterproto2.Message):
    """
    The request for a call to `SavedSearchService_UpdateSavedSearch` to update a saved search.
    """

    saved_search: "SavedSearch | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The saved search to update.
    """

    update_mask: "___google__protobuf__.FieldMask | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The list of fields to be updated. The fields available to be updated are `name` and `properties`.
    """


default_message_pool.register_message(
    "sift.saved_searches.v1", "UpdateSavedSearchRequest", UpdateSavedSearchRequest
)


@dataclass(eq=False, repr=False)
class UpdateSavedSearchResponse(betterproto2.Message):
    """
    The response of a call to `SavedSearchService_UpdateSavedSearch`.
    """

    saved_search: "SavedSearch | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "sift.saved_searches.v1", "UpdateSavedSearchResponse", UpdateSavedSearchResponse
)


class SavedSearchServiceStub:
    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def get_saved_search(
        self, message: "GetSavedSearchRequest"
    ) -> "GetSavedSearchResponse":
        """
        Retrieve a saved search.
        """

        return self._channel.unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/GetSavedSearch",
            GetSavedSearchRequest.SerializeToString,
            GetSavedSearchResponse.FromString,
        )(message)

    def create_saved_search(
        self, message: "CreateSavedSearchRequest"
    ) -> "CreateSavedSearchResponse":
        """
        Create a saved search.
        """

        return self._channel.unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/CreateSavedSearch",
            CreateSavedSearchRequest.SerializeToString,
            CreateSavedSearchResponse.FromString,
        )(message)

    def list_saved_searches(
        self, message: "ListSavedSearchesRequest"
    ) -> "ListSavedSearchesResponse":
        """
        List saved searches.
        """

        return self._channel.unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/ListSavedSearches",
            ListSavedSearchesRequest.SerializeToString,
            ListSavedSearchesResponse.FromString,
        )(message)

    def update_saved_search(
        self, message: "UpdateSavedSearchRequest"
    ) -> "UpdateSavedSearchResponse":
        """
        Updates an existing saved search using using the list of fields specified in `update_mask`.
        """

        return self._channel.unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/UpdateSavedSearch",
            UpdateSavedSearchRequest.SerializeToString,
            UpdateSavedSearchResponse.FromString,
        )(message)

    def delete_saved_search(
        self, message: "DeleteSavedSearchRequest"
    ) -> "DeleteSavedSearchResponse":
        """
        Delete a saved search.
        """

        return self._channel.unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/DeleteSavedSearch",
            DeleteSavedSearchRequest.SerializeToString,
            DeleteSavedSearchResponse.FromString,
        )(message)

    def batch_delete_saved_searches(
        self, message: "BatchDeleteSavedSearchesRequest"
    ) -> "BatchDeleteSavedSearchesResponse":
        """
        Batch deletes saved searches.
        """

        return self._channel.unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/BatchDeleteSavedSearches",
            BatchDeleteSavedSearchesRequest.SerializeToString,
            BatchDeleteSavedSearchesResponse.FromString,
        )(message)


class SavedSearchServiceAsyncStub(betterproto2.ServiceStub):
    async def get_saved_search(
        self,
        message: "GetSavedSearchRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetSavedSearchResponse":
        """
        Retrieve a saved search.
        """

        return await self._unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/GetSavedSearch",
            message,
            GetSavedSearchResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def create_saved_search(
        self,
        message: "CreateSavedSearchRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "CreateSavedSearchResponse":
        """
        Create a saved search.
        """

        return await self._unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/CreateSavedSearch",
            message,
            CreateSavedSearchResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def list_saved_searches(
        self,
        message: "ListSavedSearchesRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "ListSavedSearchesResponse":
        """
        List saved searches.
        """

        return await self._unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/ListSavedSearches",
            message,
            ListSavedSearchesResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def update_saved_search(
        self,
        message: "UpdateSavedSearchRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "UpdateSavedSearchResponse":
        """
        Updates an existing saved search using using the list of fields specified in `update_mask`.
        """

        return await self._unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/UpdateSavedSearch",
            message,
            UpdateSavedSearchResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def delete_saved_search(
        self,
        message: "DeleteSavedSearchRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "DeleteSavedSearchResponse":
        """
        Delete a saved search.
        """

        return await self._unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/DeleteSavedSearch",
            message,
            DeleteSavedSearchResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def batch_delete_saved_searches(
        self,
        message: "BatchDeleteSavedSearchesRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "BatchDeleteSavedSearchesResponse":
        """
        Batch deletes saved searches.
        """

        return await self._unary_unary(
            "/sift.saved_searches.v1.SavedSearchService/BatchDeleteSavedSearches",
            message,
            BatchDeleteSavedSearchesResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


from ....google import protobuf as ___google__protobuf__


class SavedSearchServiceBase(ServiceBase):
    async def get_saved_search(
        self, message: "GetSavedSearchRequest"
    ) -> "GetSavedSearchResponse":
        """
        Retrieve a saved search.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def create_saved_search(
        self, message: "CreateSavedSearchRequest"
    ) -> "CreateSavedSearchResponse":
        """
        Create a saved search.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def list_saved_searches(
        self, message: "ListSavedSearchesRequest"
    ) -> "ListSavedSearchesResponse":
        """
        List saved searches.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def update_saved_search(
        self, message: "UpdateSavedSearchRequest"
    ) -> "UpdateSavedSearchResponse":
        """
        Updates an existing saved search using using the list of fields specified in `update_mask`.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def delete_saved_search(
        self, message: "DeleteSavedSearchRequest"
    ) -> "DeleteSavedSearchResponse":
        """
        Delete a saved search.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def batch_delete_saved_searches(
        self, message: "BatchDeleteSavedSearchesRequest"
    ) -> "BatchDeleteSavedSearchesResponse":
        """
        Batch deletes saved searches.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_get_saved_search(
        self,
        stream: "grpclib.server.Stream[GetSavedSearchRequest, GetSavedSearchResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_saved_search(request)
        await stream.send_message(response)

    async def __rpc_create_saved_search(
        self,
        stream: "grpclib.server.Stream[CreateSavedSearchRequest, CreateSavedSearchResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.create_saved_search(request)
        await stream.send_message(response)

    async def __rpc_list_saved_searches(
        self,
        stream: "grpclib.server.Stream[ListSavedSearchesRequest, ListSavedSearchesResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.list_saved_searches(request)
        await stream.send_message(response)

    async def __rpc_update_saved_search(
        self,
        stream: "grpclib.server.Stream[UpdateSavedSearchRequest, UpdateSavedSearchResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.update_saved_search(request)
        await stream.send_message(response)

    async def __rpc_delete_saved_search(
        self,
        stream: "grpclib.server.Stream[DeleteSavedSearchRequest, DeleteSavedSearchResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.delete_saved_search(request)
        await stream.send_message(response)

    async def __rpc_batch_delete_saved_searches(
        self,
        stream: "grpclib.server.Stream[BatchDeleteSavedSearchesRequest, BatchDeleteSavedSearchesResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.batch_delete_saved_searches(request)
        await stream.send_message(response)

    def __mapping__(self) -> "dict[str, grpclib.const.Handler]":
        return {
            "/sift.saved_searches.v1.SavedSearchService/GetSavedSearch": grpclib.const.Handler(
                self.__rpc_get_saved_search,
                grpclib.const.Cardinality.UNARY_UNARY,
                GetSavedSearchRequest,
                GetSavedSearchResponse,
            ),
            "/sift.saved_searches.v1.SavedSearchService/CreateSavedSearch": grpclib.const.Handler(
                self.__rpc_create_saved_search,
                grpclib.const.Cardinality.UNARY_UNARY,
                CreateSavedSearchRequest,
                CreateSavedSearchResponse,
            ),
            "/sift.saved_searches.v1.SavedSearchService/ListSavedSearches": grpclib.const.Handler(
                self.__rpc_list_saved_searches,
                grpclib.const.Cardinality.UNARY_UNARY,
                ListSavedSearchesRequest,
                ListSavedSearchesResponse,
            ),
            "/sift.saved_searches.v1.SavedSearchService/UpdateSavedSearch": grpclib.const.Handler(
                self.__rpc_update_saved_search,
                grpclib.const.Cardinality.UNARY_UNARY,
                UpdateSavedSearchRequest,
                UpdateSavedSearchResponse,
            ),
            "/sift.saved_searches.v1.SavedSearchService/DeleteSavedSearch": grpclib.const.Handler(
                self.__rpc_delete_saved_search,
                grpclib.const.Cardinality.UNARY_UNARY,
                DeleteSavedSearchRequest,
                DeleteSavedSearchResponse,
            ),
            "/sift.saved_searches.v1.SavedSearchService/BatchDeleteSavedSearches": grpclib.const.Handler(
                self.__rpc_batch_delete_saved_searches,
                grpclib.const.Cardinality.UNARY_UNARY,
                BatchDeleteSavedSearchesRequest,
                BatchDeleteSavedSearchesResponse,
            ),
        }
