"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import sift.exports.v1.exports_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ExportServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ExportData: grpc.UnaryUnaryMultiCallable[
        sift.exports.v1.exports_pb2.ExportDataRequest,
        sift.exports.v1.exports_pb2.ExportDataResponse,
    ]

    GetDownloadUrl: grpc.UnaryUnaryMultiCallable[
        sift.exports.v1.exports_pb2.GetDownloadUrlRequest,
        sift.exports.v1.exports_pb2.GetDownloadUrlResponse,
    ]

class ExportServiceAsyncStub:
    ExportData: grpc.aio.UnaryUnaryMultiCallable[
        sift.exports.v1.exports_pb2.ExportDataRequest,
        sift.exports.v1.exports_pb2.ExportDataResponse,
    ]

    GetDownloadUrl: grpc.aio.UnaryUnaryMultiCallable[
        sift.exports.v1.exports_pb2.GetDownloadUrlRequest,
        sift.exports.v1.exports_pb2.GetDownloadUrlResponse,
    ]

class ExportServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ExportData(
        self,
        request: sift.exports.v1.exports_pb2.ExportDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.exports.v1.exports_pb2.ExportDataResponse, collections.abc.Awaitable[sift.exports.v1.exports_pb2.ExportDataResponse]]: ...

    @abc.abstractmethod
    def GetDownloadUrl(
        self,
        request: sift.exports.v1.exports_pb2.GetDownloadUrlRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.exports.v1.exports_pb2.GetDownloadUrlResponse, collections.abc.Awaitable[sift.exports.v1.exports_pb2.GetDownloadUrlResponse]]: ...

def add_ExportServiceServicer_to_server(servicer: ExportServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
