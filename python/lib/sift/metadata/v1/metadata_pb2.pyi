"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _MetadataKeyType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _MetadataKeyTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MetadataKeyType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    METADATA_KEY_TYPE_UNSPECIFIED: _MetadataKeyType.ValueType  # 0
    METADATA_KEY_TYPE_STRING: _MetadataKeyType.ValueType  # 1
    """string"""
    METADATA_KEY_TYPE_NUMBER: _MetadataKeyType.ValueType  # 2
    """number"""
    METADATA_KEY_TYPE_BOOLEAN: _MetadataKeyType.ValueType  # 3
    """boolean"""

class MetadataKeyType(_MetadataKeyType, metaclass=_MetadataKeyTypeEnumTypeWrapper):
    """Metadata key type."""

METADATA_KEY_TYPE_UNSPECIFIED: MetadataKeyType.ValueType  # 0
METADATA_KEY_TYPE_STRING: MetadataKeyType.ValueType  # 1
"""string"""
METADATA_KEY_TYPE_NUMBER: MetadataKeyType.ValueType  # 2
"""number"""
METADATA_KEY_TYPE_BOOLEAN: MetadataKeyType.ValueType  # 3
"""boolean"""
global___MetadataKeyType = MetadataKeyType

@typing.final
class MetadataKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: global___MetadataKeyType.ValueType
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: global___MetadataKeyType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "type", b"type"]) -> None: ...

global___MetadataKey = MetadataKey

@typing.final
class MetadataValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    NUMBER_VALUE_FIELD_NUMBER: builtins.int
    BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
    string_value: builtins.str
    number_value: builtins.float
    boolean_value: builtins.bool
    @property
    def key(self) -> global___MetadataKey: ...
    def __init__(
        self,
        *,
        key: global___MetadataKey | None = ...,
        string_value: builtins.str = ...,
        number_value: builtins.float = ...,
        boolean_value: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "key", b"key", "number_value", b"number_value", "string_value", b"string_value", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["boolean_value", b"boolean_value", "key", b"key", "number_value", b"number_value", "string_value", b"string_value", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["string_value", "number_value", "boolean_value"] | None: ...

global___MetadataValue = MetadataValue

@typing.final
class CreateMetadataKeyRequest(google.protobuf.message.Message):
    """The request of a call to `MetadataService_CreateMetadataKey` to create a metadata key."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_KEY_FIELD_NUMBER: builtins.int
    @property
    def metadata_key(self) -> global___MetadataKey: ...
    def __init__(
        self,
        *,
        metadata_key: global___MetadataKey | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata_key", b"metadata_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata_key", b"metadata_key"]) -> None: ...

global___CreateMetadataKeyRequest = CreateMetadataKeyRequest

@typing.final
class CreateMetadataKeyResponse(google.protobuf.message.Message):
    """The response of a call to `MetadataService_CreateMetadataKey` to create a metadata key."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_KEY_FIELD_NUMBER: builtins.int
    @property
    def metadata_key(self) -> global___MetadataKey: ...
    def __init__(
        self,
        *,
        metadata_key: global___MetadataKey | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata_key", b"metadata_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata_key", b"metadata_key"]) -> None: ...

global___CreateMetadataKeyResponse = CreateMetadataKeyResponse

@typing.final
class ListMetadataKeysRequest(google.protobuf.message.Message):
    """The request for a call to `MetadataService_ListMetadataKeys` to retrieve metadata keys."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    page_size: builtins.int
    """The maximum number of metadata keys to return. The service may return fewer than this value.
    If unspecified, at most 50 metadata keys will be returned. The maximum value is 1000; values above
    1000 will be coerced to 1000. Optional.
    """
    page_token: builtins.str
    """A page token, received from a previous `ListMetadataKeys` call.
    Provide this to retrieve the subsequent page.
    When paginating, all other parameters provided to `ListMetadataKeys` must match
    the call that provided the page token. Optional.
    """
    filter: builtins.str
    """A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
    Available fields to filter by are:
    `name`.
    For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
    For more information about the fields used for filtering, please refer to this definition. Optional.
    """
    order_by: builtins.str
    """How to order the retrieved metadata keys. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
    Available fields to order_by are `created_date` and `name`.
    If left empty, items are ordered by `created_date` in ascending order (oldest-first).
    For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
    Example: "created_date desc,modified_date"
    """
    def __init__(
        self,
        *,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
        order_by: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "order_by", b"order_by", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListMetadataKeysRequest = ListMetadataKeysRequest

@typing.final
class ListMetadataKeysResponse(google.protobuf.message.Message):
    """The response of a call to `MetadataService_ListMetadataKeysResponse`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_KEYS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    @property
    def metadata_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetadataKey]: ...
    def __init__(
        self,
        *,
        metadata_keys: collections.abc.Iterable[global___MetadataKey] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["metadata_keys", b"metadata_keys", "next_page_token", b"next_page_token"]) -> None: ...

global___ListMetadataKeysResponse = ListMetadataKeysResponse
