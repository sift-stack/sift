"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import sift.metadata.v1.metadata_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class MetadataServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    CreateMetadataKey: grpc.UnaryUnaryMultiCallable[
        sift.metadata.v1.metadata_pb2.CreateMetadataKeyRequest,
        sift.metadata.v1.metadata_pb2.CreateMetadataKeyResponse,
    ]
    """Create a metadata key."""

    ListMetadataKeys: grpc.UnaryUnaryMultiCallable[
        sift.metadata.v1.metadata_pb2.ListMetadataKeysRequest,
        sift.metadata.v1.metadata_pb2.ListMetadataKeysResponse,
    ]
    """List metadata keys."""

class MetadataServiceAsyncStub:
    CreateMetadataKey: grpc.aio.UnaryUnaryMultiCallable[
        sift.metadata.v1.metadata_pb2.CreateMetadataKeyRequest,
        sift.metadata.v1.metadata_pb2.CreateMetadataKeyResponse,
    ]
    """Create a metadata key."""

    ListMetadataKeys: grpc.aio.UnaryUnaryMultiCallable[
        sift.metadata.v1.metadata_pb2.ListMetadataKeysRequest,
        sift.metadata.v1.metadata_pb2.ListMetadataKeysResponse,
    ]
    """List metadata keys."""

class MetadataServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateMetadataKey(
        self,
        request: sift.metadata.v1.metadata_pb2.CreateMetadataKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.metadata.v1.metadata_pb2.CreateMetadataKeyResponse, collections.abc.Awaitable[sift.metadata.v1.metadata_pb2.CreateMetadataKeyResponse]]:
        """Create a metadata key."""

    @abc.abstractmethod
    def ListMetadataKeys(
        self,
        request: sift.metadata.v1.metadata_pb2.ListMetadataKeysRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.metadata.v1.metadata_pb2.ListMetadataKeysResponse, collections.abc.Awaitable[sift.metadata.v1.metadata_pb2.ListMetadataKeysResponse]]:
        """List metadata keys."""

def add_MetadataServiceServicer_to_server(servicer: MetadataServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
