# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sift.webhooks.v1 import webhooks_pb2 as sift_dot_webhooks_dot_v1_dot_webhooks__pb2


class WebhookServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetWebhook = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/GetWebhook',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookResponse.FromString,
                )
        self.CreateWebhook = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/CreateWebhook',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookResponse.FromString,
                )
        self.UpdateWebhook = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/UpdateWebhook',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.UpdateWebhookRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.UpdateWebhookResponse.FromString,
                )
        self.ListWebhooks = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/ListWebhooks',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhooksRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhooksResponse.FromString,
                )
        self.TestWebhook = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/TestWebhook',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.TestWebhookRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.TestWebhookResponse.FromString,
                )
        self.CreateWebhookSignatureKey = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/CreateWebhookSignatureKey',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookSignatureKeyRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookSignatureKeyResponse.FromString,
                )
        self.GetWebhookSignatureKey = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/GetWebhookSignatureKey',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookSignatureKeyRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookSignatureKeyResponse.FromString,
                )
        self.ToggleWebhookSignatureKeyActivation = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/ToggleWebhookSignatureKeyActivation',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ToggleWebhookSignatureKeyActivationRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ToggleWebhookSignatureKeyActivationResponse.FromString,
                )
        self.RotateWebhookSignatureKey = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/RotateWebhookSignatureKey',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.RotateWebhookSignatureKeyRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.RotateWebhookSignatureKeyResponse.FromString,
                )
        self.BatchCreateWebhookLogs = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/BatchCreateWebhookLogs',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.BatchCreateWebhookLogsRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.BatchCreateWebhookLogsResponse.FromString,
                )
        self.ListWebhookLogs = channel.unary_unary(
                '/sift.webhooks.v1.WebhookService/ListWebhookLogs',
                request_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhookLogsRequest.SerializeToString,
                response_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhookLogsResponse.FromString,
                )


class WebhookServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetWebhook(self, request, context):
        """Retrieve a webhook by ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWebhook(self, request, context):
        """Create a webhook.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWebhook(self, request, context):
        """Update select fields of an existing webhook.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWebhooks(self, request, context):
        """Retrieve and optionally filter a list of webhooks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestWebhook(self, request, context):
        """Test an existing webhook or a webhook create request. This RPC will attempt to send an actual webhook
        with the provided parameters and forward back the response from the target.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWebhookSignatureKey(self, request, context):
        """Create an webhook signature key. If a webhook signature key is active, the bodies of all webhooks will be signed using the signature key with HMAC-SHA-256.
        The signature generated will then included in the `X-Sift-Signature` HTTP header. Only one key can be held per organization. If an existing key exists, then
        this will simply return it. See `WebhookService_RotateWebhookSignatureKey` to rotate the key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWebhookSignatureKey(self, request, context):
        """Retrieve the current webhook signature key. Will return a not found error if one doesn't yet exist.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleWebhookSignatureKeyActivation(self, request, context):
        """Set the activation state of the organization's current webhook signature key. Will return a not found error if one doesn't yet exist.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RotateWebhookSignatureKey(self, request, context):
        """Generate a new webhook signature key and replace the previous one. The activation state of the new key will match the activation state of the previous.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateWebhookLogs(self, request, context):
        """Create a batch of webhook logs. Users should not have to call this directly.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWebhookLogs(self, request, context):
        """Retrieve and optionally filter a list of webhook logs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebhookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWebhook,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookResponse.SerializeToString,
            ),
            'CreateWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWebhook,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookResponse.SerializeToString,
            ),
            'UpdateWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWebhook,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.UpdateWebhookRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.UpdateWebhookResponse.SerializeToString,
            ),
            'ListWebhooks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWebhooks,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhooksRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhooksResponse.SerializeToString,
            ),
            'TestWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.TestWebhook,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.TestWebhookRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.TestWebhookResponse.SerializeToString,
            ),
            'CreateWebhookSignatureKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWebhookSignatureKey,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookSignatureKeyRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookSignatureKeyResponse.SerializeToString,
            ),
            'GetWebhookSignatureKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWebhookSignatureKey,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookSignatureKeyRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookSignatureKeyResponse.SerializeToString,
            ),
            'ToggleWebhookSignatureKeyActivation': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleWebhookSignatureKeyActivation,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ToggleWebhookSignatureKeyActivationRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ToggleWebhookSignatureKeyActivationResponse.SerializeToString,
            ),
            'RotateWebhookSignatureKey': grpc.unary_unary_rpc_method_handler(
                    servicer.RotateWebhookSignatureKey,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.RotateWebhookSignatureKeyRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.RotateWebhookSignatureKeyResponse.SerializeToString,
            ),
            'BatchCreateWebhookLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateWebhookLogs,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.BatchCreateWebhookLogsRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.BatchCreateWebhookLogsResponse.SerializeToString,
            ),
            'ListWebhookLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWebhookLogs,
                    request_deserializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhookLogsRequest.FromString,
                    response_serializer=sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhookLogsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sift.webhooks.v1.WebhookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WebhookService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/GetWebhook',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/CreateWebhook',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/UpdateWebhook',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.UpdateWebhookRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.UpdateWebhookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWebhooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/ListWebhooks',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhooksRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhooksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/TestWebhook',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.TestWebhookRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.TestWebhookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWebhookSignatureKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/CreateWebhookSignatureKey',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookSignatureKeyRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.CreateWebhookSignatureKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWebhookSignatureKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/GetWebhookSignatureKey',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookSignatureKeyRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.GetWebhookSignatureKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleWebhookSignatureKeyActivation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/ToggleWebhookSignatureKeyActivation',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ToggleWebhookSignatureKeyActivationRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ToggleWebhookSignatureKeyActivationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RotateWebhookSignatureKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/RotateWebhookSignatureKey',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.RotateWebhookSignatureKeyRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.RotateWebhookSignatureKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateWebhookLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/BatchCreateWebhookLogs',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.BatchCreateWebhookLogsRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.BatchCreateWebhookLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWebhookLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.webhooks.v1.WebhookService/ListWebhookLogs',
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhookLogsRequest.SerializeToString,
            sift_dot_webhooks_dot_v1_dot_webhooks__pb2.ListWebhookLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
