"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import sift.external_sync.v1.external_sync_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ExternalSyncServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    SyncOrganization: grpc.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.SyncOrganizationRequest,
        sift.external_sync.v1.external_sync_pb2.SyncOrganizationResponse,
    ]

    GenerateToken: grpc.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.GenerateTokenRequest,
        sift.external_sync.v1.external_sync_pb2.GenerateTokenResponse,
    ]

    GetExternalSync: grpc.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.GetExternalSyncRequest,
        sift.external_sync.v1.external_sync_pb2.GetExternalSyncResponse,
    ]

    ListExternalSyncTokens: grpc.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensRequest,
        sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensResponse,
    ]

class ExternalSyncServiceAsyncStub:
    SyncOrganization: grpc.aio.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.SyncOrganizationRequest,
        sift.external_sync.v1.external_sync_pb2.SyncOrganizationResponse,
    ]

    GenerateToken: grpc.aio.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.GenerateTokenRequest,
        sift.external_sync.v1.external_sync_pb2.GenerateTokenResponse,
    ]

    GetExternalSync: grpc.aio.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.GetExternalSyncRequest,
        sift.external_sync.v1.external_sync_pb2.GetExternalSyncResponse,
    ]

    ListExternalSyncTokens: grpc.aio.UnaryUnaryMultiCallable[
        sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensRequest,
        sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensResponse,
    ]

class ExternalSyncServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def SyncOrganization(
        self,
        request: sift.external_sync.v1.external_sync_pb2.SyncOrganizationRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.external_sync.v1.external_sync_pb2.SyncOrganizationResponse, collections.abc.Awaitable[sift.external_sync.v1.external_sync_pb2.SyncOrganizationResponse]]: ...

    @abc.abstractmethod
    def GenerateToken(
        self,
        request: sift.external_sync.v1.external_sync_pb2.GenerateTokenRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.external_sync.v1.external_sync_pb2.GenerateTokenResponse, collections.abc.Awaitable[sift.external_sync.v1.external_sync_pb2.GenerateTokenResponse]]: ...

    @abc.abstractmethod
    def GetExternalSync(
        self,
        request: sift.external_sync.v1.external_sync_pb2.GetExternalSyncRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.external_sync.v1.external_sync_pb2.GetExternalSyncResponse, collections.abc.Awaitable[sift.external_sync.v1.external_sync_pb2.GetExternalSyncResponse]]: ...

    @abc.abstractmethod
    def ListExternalSyncTokens(
        self,
        request: sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensResponse, collections.abc.Awaitable[sift.external_sync.v1.external_sync_pb2.ListExternalSyncTokensResponse]]: ...

def add_ExternalSyncServiceServicer_to_server(servicer: ExternalSyncServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
