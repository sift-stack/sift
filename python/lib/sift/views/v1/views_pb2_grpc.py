# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sift.views.v1 import views_pb2 as sift_dot_views_dot_v1_dot_views__pb2


class ViewServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetView = channel.unary_unary(
                '/sift.views.v1.ViewService/GetView',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.GetViewRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.GetViewResponse.FromString,
                )
        self.CreateView = channel.unary_unary(
                '/sift.views.v1.ViewService/CreateView',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.CreateViewRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.CreateViewResponse.FromString,
                )
        self.UpdateView = channel.unary_unary(
                '/sift.views.v1.ViewService/UpdateView',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.UpdateViewRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.UpdateViewResponse.FromString,
                )
        self.ListViews = channel.unary_unary(
                '/sift.views.v1.ViewService/ListViews',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.ListViewsRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.ListViewsResponse.FromString,
                )
        self.ListApplicableViews = channel.unary_unary(
                '/sift.views.v1.ViewService/ListApplicableViews',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.ListApplicableViewsRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.ListApplicableViewsResponse.FromString,
                )
        self.DeleteView = channel.unary_unary(
                '/sift.views.v1.ViewService/DeleteView',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.DeleteViewRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.DeleteViewResponse.FromString,
                )
        self.PinView = channel.unary_unary(
                '/sift.views.v1.ViewService/PinView',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.PinViewRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.PinViewResponse.FromString,
                )
        self.UnpinView = channel.unary_unary(
                '/sift.views.v1.ViewService/UnpinView',
                request_serializer=sift_dot_views_dot_v1_dot_views__pb2.UnpinViewRequest.SerializeToString,
                response_deserializer=sift_dot_views_dot_v1_dot_views__pb2.UnpinViewResponse.FromString,
                )


class ViewServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetView(self, request, context):
        """Retrieves a view.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateView(self, request, context):
        """Creates a view.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateView(self, request, context):
        """Updates an existing view using using the list of fields specified in `update_mask`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListViews(self, request, context):
        """Retrieves views using an optional filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListApplicableViews(self, request, context):
        """Lists views that apply to assets/runs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteView(self, request, context):
        """Deletes a view.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PinView(self, request, context):
        """Pins a view.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnpinView(self, request, context):
        """Unpins a view.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ViewServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetView': grpc.unary_unary_rpc_method_handler(
                    servicer.GetView,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.GetViewRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.GetViewResponse.SerializeToString,
            ),
            'CreateView': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateView,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.CreateViewRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.CreateViewResponse.SerializeToString,
            ),
            'UpdateView': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateView,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.UpdateViewRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.UpdateViewResponse.SerializeToString,
            ),
            'ListViews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListViews,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.ListViewsRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.ListViewsResponse.SerializeToString,
            ),
            'ListApplicableViews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListApplicableViews,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.ListApplicableViewsRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.ListApplicableViewsResponse.SerializeToString,
            ),
            'DeleteView': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteView,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.DeleteViewRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.DeleteViewResponse.SerializeToString,
            ),
            'PinView': grpc.unary_unary_rpc_method_handler(
                    servicer.PinView,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.PinViewRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.PinViewResponse.SerializeToString,
            ),
            'UnpinView': grpc.unary_unary_rpc_method_handler(
                    servicer.UnpinView,
                    request_deserializer=sift_dot_views_dot_v1_dot_views__pb2.UnpinViewRequest.FromString,
                    response_serializer=sift_dot_views_dot_v1_dot_views__pb2.UnpinViewResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sift.views.v1.ViewService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ViewService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/GetView',
            sift_dot_views_dot_v1_dot_views__pb2.GetViewRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.GetViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/CreateView',
            sift_dot_views_dot_v1_dot_views__pb2.CreateViewRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.CreateViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/UpdateView',
            sift_dot_views_dot_v1_dot_views__pb2.UpdateViewRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.UpdateViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/ListViews',
            sift_dot_views_dot_v1_dot_views__pb2.ListViewsRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.ListViewsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListApplicableViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/ListApplicableViews',
            sift_dot_views_dot_v1_dot_views__pb2.ListApplicableViewsRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.ListApplicableViewsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/DeleteView',
            sift_dot_views_dot_v1_dot_views__pb2.DeleteViewRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.DeleteViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PinView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/PinView',
            sift_dot_views_dot_v1_dot_views__pb2.PinViewRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.PinViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnpinView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.views.v1.ViewService/UnpinView',
            sift_dot_views_dot_v1_dot_views__pb2.UnpinViewRequest.SerializeToString,
            sift_dot_views_dot_v1_dot_views__pb2.UnpinViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
