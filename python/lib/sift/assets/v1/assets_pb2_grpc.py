# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sift.assets.v1 import assets_pb2 as sift_dot_assets_dot_v1_dot_assets__pb2


class AssetServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteAsset = channel.unary_unary(
                '/sift.assets.v1.AssetService/DeleteAsset',
                request_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.DeleteAssetRequest.SerializeToString,
                response_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.DeleteAssetResponse.FromString,
                )
        self.GetAsset = channel.unary_unary(
                '/sift.assets.v1.AssetService/GetAsset',
                request_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.GetAssetRequest.SerializeToString,
                response_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.GetAssetResponse.FromString,
                )
        self.ListAssets = channel.unary_unary(
                '/sift.assets.v1.AssetService/ListAssets',
                request_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.ListAssetsRequest.SerializeToString,
                response_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.ListAssetsResponse.FromString,
                )
        self.UpdateAsset = channel.unary_unary(
                '/sift.assets.v1.AssetService/UpdateAsset',
                request_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.UpdateAssetRequest.SerializeToString,
                response_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.UpdateAssetResponse.FromString,
                )


class AssetServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteAsset(self, request, context):
        """Deletes an asset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAsset(self, request, context):
        """Retrieves an asset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAssets(self, request, context):
        """Retrieves assets using an optional filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAsset,
                    request_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.DeleteAssetRequest.FromString,
                    response_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.DeleteAssetResponse.SerializeToString,
            ),
            'GetAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAsset,
                    request_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.GetAssetRequest.FromString,
                    response_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.GetAssetResponse.SerializeToString,
            ),
            'ListAssets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAssets,
                    request_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.ListAssetsRequest.FromString,
                    response_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.ListAssetsResponse.SerializeToString,
            ),
            'UpdateAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAsset,
                    request_deserializer=sift_dot_assets_dot_v1_dot_assets__pb2.UpdateAssetRequest.FromString,
                    response_serializer=sift_dot_assets_dot_v1_dot_assets__pb2.UpdateAssetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sift.assets.v1.AssetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssetService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.assets.v1.AssetService/DeleteAsset',
            sift_dot_assets_dot_v1_dot_assets__pb2.DeleteAssetRequest.SerializeToString,
            sift_dot_assets_dot_v1_dot_assets__pb2.DeleteAssetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.assets.v1.AssetService/GetAsset',
            sift_dot_assets_dot_v1_dot_assets__pb2.GetAssetRequest.SerializeToString,
            sift_dot_assets_dot_v1_dot_assets__pb2.GetAssetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.assets.v1.AssetService/ListAssets',
            sift_dot_assets_dot_v1_dot_assets__pb2.ListAssetsRequest.SerializeToString,
            sift_dot_assets_dot_v1_dot_assets__pb2.ListAssetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.assets.v1.AssetService/UpdateAsset',
            sift_dot_assets_dot_v1_dot_assets__pb2.UpdateAssetRequest.SerializeToString,
            sift_dot_assets_dot_v1_dot_assets__pb2.UpdateAssetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
