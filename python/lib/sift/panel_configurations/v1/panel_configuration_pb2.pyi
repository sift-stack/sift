"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import sift.calculated_channels.v2.calculated_channels_pb2
import sift.common.type.v1.channel_bit_field_element_pb2
import sift.common.type.v1.channel_data_type_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PanelType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PanelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PanelType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PANEL_TYPE_UNSPECIFIED: _PanelType.ValueType  # 0
    PANEL_TYPE_TIMESERIES: _PanelType.ValueType  # 1
    PANEL_TYPE_TABLE: _PanelType.ValueType  # 2
    PANEL_TYPE_FFT: _PanelType.ValueType  # 3
    PANEL_TYPE_GEO_MAP: _PanelType.ValueType  # 4
    PANEL_TYPE_SCATTER_PLOT: _PanelType.ValueType  # 5
    PANEL_TYPE_FILE_VIEWER: _PanelType.ValueType  # 6
    PANEL_TYPE_HISTOGRAM: _PanelType.ValueType  # 7

class PanelType(_PanelType, metaclass=_PanelTypeEnumTypeWrapper): ...

PANEL_TYPE_UNSPECIFIED: PanelType.ValueType  # 0
PANEL_TYPE_TIMESERIES: PanelType.ValueType  # 1
PANEL_TYPE_TABLE: PanelType.ValueType  # 2
PANEL_TYPE_FFT: PanelType.ValueType  # 3
PANEL_TYPE_GEO_MAP: PanelType.ValueType  # 4
PANEL_TYPE_SCATTER_PLOT: PanelType.ValueType  # 5
PANEL_TYPE_FILE_VIEWER: PanelType.ValueType  # 6
PANEL_TYPE_HISTOGRAM: PanelType.ValueType  # 7
global___PanelType = PanelType

class _PlottedChannelType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PlottedChannelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PlottedChannelType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PLOTTED_CHANNEL_TYPE_UNSPECIFIED: _PlottedChannelType.ValueType  # 0
    PLOTTED_CHANNEL_TYPE_REGULAR: _PlottedChannelType.ValueType  # 1
    PLOTTED_CHANNEL_TYPE_CALCULATED_CHANNEL: _PlottedChannelType.ValueType  # 2
    PLOTTED_CHANNEL_TYPE_BIT_FIELD_ELEMENT: _PlottedChannelType.ValueType  # 3
    PLOTTED_CHANNEL_TYPE_ENUM: _PlottedChannelType.ValueType  # 4

class PlottedChannelType(_PlottedChannelType, metaclass=_PlottedChannelTypeEnumTypeWrapper): ...

PLOTTED_CHANNEL_TYPE_UNSPECIFIED: PlottedChannelType.ValueType  # 0
PLOTTED_CHANNEL_TYPE_REGULAR: PlottedChannelType.ValueType  # 1
PLOTTED_CHANNEL_TYPE_CALCULATED_CHANNEL: PlottedChannelType.ValueType  # 2
PLOTTED_CHANNEL_TYPE_BIT_FIELD_ELEMENT: PlottedChannelType.ValueType  # 3
PLOTTED_CHANNEL_TYPE_ENUM: PlottedChannelType.ValueType  # 4
global___PlottedChannelType = PlottedChannelType

@typing.final
class PanelConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATION_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    CHANGE_MESSAGE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PANEL_TYPE_FIELD_NUMBER: builtins.int
    CHANNEL_CONFIGURATIONS_FIELD_NUMBER: builtins.int
    CHART_SETTINGS_FIELD_NUMBER: builtins.int
    CREATED_DATE_FIELD_NUMBER: builtins.int
    MODIFIED_DATE_FIELD_NUMBER: builtins.int
    ARCHIVED_DATE_FIELD_NUMBER: builtins.int
    CREATED_BY_USER_ID_FIELD_NUMBER: builtins.int
    MODIFIED_BY_USER_ID_FIELD_NUMBER: builtins.int
    IS_ARCHIVED_FIELD_NUMBER: builtins.int
    panel_configuration_id: builtins.str
    version_id: builtins.str
    version: builtins.int
    change_message: builtins.str
    name: builtins.str
    panel_type: global___PanelType.ValueType
    created_by_user_id: builtins.str
    modified_by_user_id: builtins.str
    is_archived: builtins.bool
    @property
    def channel_configurations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChannelConfigurations]: ...
    @property
    def chart_settings(self) -> google.protobuf.struct_pb2.Struct: ...
    @property
    def created_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def archived_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        panel_configuration_id: builtins.str = ...,
        version_id: builtins.str = ...,
        version: builtins.int = ...,
        change_message: builtins.str = ...,
        name: builtins.str = ...,
        panel_type: global___PanelType.ValueType = ...,
        channel_configurations: collections.abc.Iterable[global___ChannelConfigurations] | None = ...,
        chart_settings: google.protobuf.struct_pb2.Struct | None = ...,
        created_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        archived_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by_user_id: builtins.str = ...,
        modified_by_user_id: builtins.str = ...,
        is_archived: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_chart_settings", b"_chart_settings", "archived_date", b"archived_date", "chart_settings", b"chart_settings", "created_date", b"created_date", "modified_date", b"modified_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_chart_settings", b"_chart_settings", "archived_date", b"archived_date", "change_message", b"change_message", "channel_configurations", b"channel_configurations", "chart_settings", b"chart_settings", "created_by_user_id", b"created_by_user_id", "created_date", b"created_date", "is_archived", b"is_archived", "modified_by_user_id", b"modified_by_user_id", "modified_date", b"modified_date", "name", b"name", "panel_configuration_id", b"panel_configuration_id", "panel_type", b"panel_type", "version", b"version", "version_id", b"version_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_chart_settings", b"_chart_settings"]) -> typing.Literal["chart_settings"] | None: ...

global___PanelConfiguration = PanelConfiguration

@typing.final
class ChannelConfigurations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    CHANNEL_SETTINGS_FIELD_NUMBER: builtins.int
    BIT_FIELD_INDEX_FIELD_NUMBER: builtins.int
    BIT_FIELD_ELEMENT_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    EXPRESSION_CHANNEL_REFERENCES_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: global___PlottedChannelType.ValueType
    color: builtins.str
    bit_field_index: builtins.int
    """bitfield"""
    expression: builtins.str
    """temporary calculated channel"""
    data_type: sift.common.type.v1.channel_data_type_pb2.ChannelDataType.ValueType
    @property
    def channel_settings(self) -> google.protobuf.struct_pb2.Struct: ...
    @property
    def bit_field_element(self) -> sift.common.type.v1.channel_bit_field_element_pb2.ChannelBitFieldElement: ...
    @property
    def expression_channel_references(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[sift.calculated_channels.v2.calculated_channels_pb2.CalculatedChannelAbstractChannelReference]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: global___PlottedChannelType.ValueType = ...,
        color: builtins.str = ...,
        channel_settings: google.protobuf.struct_pb2.Struct | None = ...,
        bit_field_index: builtins.int | None = ...,
        bit_field_element: sift.common.type.v1.channel_bit_field_element_pb2.ChannelBitFieldElement | None = ...,
        expression: builtins.str | None = ...,
        expression_channel_references: collections.abc.Iterable[sift.calculated_channels.v2.calculated_channels_pb2.CalculatedChannelAbstractChannelReference] | None = ...,
        data_type: sift.common.type.v1.channel_data_type_pb2.ChannelDataType.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_bit_field_element", b"_bit_field_element", "_bit_field_index", b"_bit_field_index", "_data_type", b"_data_type", "_expression", b"_expression", "bit_field_element", b"bit_field_element", "bit_field_index", b"bit_field_index", "channel_settings", b"channel_settings", "data_type", b"data_type", "expression", b"expression"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_bit_field_element", b"_bit_field_element", "_bit_field_index", b"_bit_field_index", "_data_type", b"_data_type", "_expression", b"_expression", "bit_field_element", b"bit_field_element", "bit_field_index", b"bit_field_index", "channel_settings", b"channel_settings", "color", b"color", "data_type", b"data_type", "expression", b"expression", "expression_channel_references", b"expression_channel_references", "name", b"name", "type", b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_bit_field_element", b"_bit_field_element"]) -> typing.Literal["bit_field_element"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_bit_field_index", b"_bit_field_index"]) -> typing.Literal["bit_field_index"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_data_type", b"_data_type"]) -> typing.Literal["data_type"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_expression", b"_expression"]) -> typing.Literal["expression"] | None: ...

global___ChannelConfigurations = ChannelConfigurations

@typing.final
class GetPanelConfigurationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATION_ID_FIELD_NUMBER: builtins.int
    panel_configuration_id: builtins.str
    def __init__(
        self,
        *,
        panel_configuration_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["panel_configuration_id", b"panel_configuration_id"]) -> None: ...

global___GetPanelConfigurationRequest = GetPanelConfigurationRequest

@typing.final
class GetPanelConfigurationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def panel_configuration(self) -> global___PanelConfiguration: ...
    def __init__(
        self,
        *,
        panel_configuration: global___PanelConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration"]) -> None: ...

global___GetPanelConfigurationResponse = GetPanelConfigurationResponse

@typing.final
class ListPanelConfigurationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    page_size: builtins.int
    """The maximum number of panel configurations to return.
    The service may return fewer than this value.
    If unspecified, at most 50 panel configurations will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """
    page_token: builtins.str
    """A page token, received from a previous `ListPanelConfigurations` call.
    Provide this to retrieve the subsequent page.
    When paginating, all other parameters provided to `ListPanelConfigurations` must match
    the call that provided the page token.
    """
    filter: builtins.str
    """A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string
    Available fields to filter by are 'name', 'created_date', 'modified_date', and 'is_archived'.
    For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
    """
    order_by: builtins.str
    """How to order the retrieved panel configurations. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
    Available fields to order_by are `name`.
    If left empty, items are ordered by `name` in ascending order (alphabetical).
    For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
    Example: "name"
    """
    def __init__(
        self,
        *,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
        order_by: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "order_by", b"order_by", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListPanelConfigurationsRequest = ListPanelConfigurationsRequest

@typing.final
class ListPanelConfigurationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """
    @property
    def panel_configurations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PanelConfiguration]: ...
    def __init__(
        self,
        *,
        panel_configurations: collections.abc.Iterable[global___PanelConfiguration] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["next_page_token", b"next_page_token", "panel_configurations", b"panel_configurations"]) -> None: ...

global___ListPanelConfigurationsResponse = ListPanelConfigurationsResponse

@typing.final
class CreatePanelConfigurationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PANEL_TYPE_FIELD_NUMBER: builtins.int
    CHANNEL_CONFIGURATIONS_FIELD_NUMBER: builtins.int
    CHART_SETTINGS_FIELD_NUMBER: builtins.int
    name: builtins.str
    panel_type: global___PanelType.ValueType
    @property
    def channel_configurations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChannelConfigurations]: ...
    @property
    def chart_settings(self) -> google.protobuf.struct_pb2.Struct: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        panel_type: global___PanelType.ValueType = ...,
        channel_configurations: collections.abc.Iterable[global___ChannelConfigurations] | None = ...,
        chart_settings: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_chart_settings", b"_chart_settings", "chart_settings", b"chart_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_chart_settings", b"_chart_settings", "channel_configurations", b"channel_configurations", "chart_settings", b"chart_settings", "name", b"name", "panel_type", b"panel_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_chart_settings", b"_chart_settings"]) -> typing.Literal["chart_settings"] | None: ...

global___CreatePanelConfigurationRequest = CreatePanelConfigurationRequest

@typing.final
class CreatePanelConfigurationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def panel_configuration(self) -> global___PanelConfiguration: ...
    def __init__(
        self,
        *,
        panel_configuration: global___PanelConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration"]) -> None: ...

global___CreatePanelConfigurationResponse = CreatePanelConfigurationResponse

@typing.final
class UpdatePanelConfigurationRequest(google.protobuf.message.Message):
    """The request for a call to `PanelConfigurationService_UpdatePanelConfiguration` to update a panel configuration. Updating a panel
    configuration creates a new version of the panel configuration, leaving the previous untouched. If no update is deemed necessary, then the
    the current version is returned. Use `is_archived` to archive/unarchive a panel configuration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def panel_configuration(self) -> global___PanelConfiguration:
        """The panel configuration to update."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated. The fields available to be updated are `name`, `panel_type`, `channel_configurations`,
        `chart_settings`, and `is_archived`.
        """

    def __init__(
        self,
        *,
        panel_configuration: global___PanelConfiguration | None = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration", "update_mask", b"update_mask"]) -> None: ...

global___UpdatePanelConfigurationRequest = UpdatePanelConfigurationRequest

@typing.final
class UpdatePanelConfigurationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PANEL_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def panel_configuration(self) -> global___PanelConfiguration: ...
    def __init__(
        self,
        *,
        panel_configuration: global___PanelConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["panel_configuration", b"panel_configuration"]) -> None: ...

global___UpdatePanelConfigurationResponse = UpdatePanelConfigurationResponse
