"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import sift.saved_searches.v1.saved_searches_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class SavedSearchServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetSavedSearch: grpc.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchResponse,
    ]
    """Retrieve a saved search."""

    CreateSavedSearch: grpc.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchResponse,
    ]
    """Create a saved search."""

    ListSavedSearches: grpc.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesRequest,
        sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesResponse,
    ]
    """List saved searches."""

    UpdateSavedSearch: grpc.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchResponse,
    ]
    """Updates an existing saved search using using the list of fields specified in `update_mask`."""

    DeleteSavedSearch: grpc.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchResponse,
    ]
    """Delete a saved search."""

    BatchDeleteSavedSearches: grpc.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesRequest,
        sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesResponse,
    ]
    """Batch deletes saved searches."""

class SavedSearchServiceAsyncStub:
    GetSavedSearch: grpc.aio.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchResponse,
    ]
    """Retrieve a saved search."""

    CreateSavedSearch: grpc.aio.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchResponse,
    ]
    """Create a saved search."""

    ListSavedSearches: grpc.aio.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesRequest,
        sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesResponse,
    ]
    """List saved searches."""

    UpdateSavedSearch: grpc.aio.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchResponse,
    ]
    """Updates an existing saved search using using the list of fields specified in `update_mask`."""

    DeleteSavedSearch: grpc.aio.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchRequest,
        sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchResponse,
    ]
    """Delete a saved search."""

    BatchDeleteSavedSearches: grpc.aio.UnaryUnaryMultiCallable[
        sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesRequest,
        sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesResponse,
    ]
    """Batch deletes saved searches."""

class SavedSearchServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetSavedSearch(
        self,
        request: sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchResponse, collections.abc.Awaitable[sift.saved_searches.v1.saved_searches_pb2.GetSavedSearchResponse]]:
        """Retrieve a saved search."""

    @abc.abstractmethod
    def CreateSavedSearch(
        self,
        request: sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchResponse, collections.abc.Awaitable[sift.saved_searches.v1.saved_searches_pb2.CreateSavedSearchResponse]]:
        """Create a saved search."""

    @abc.abstractmethod
    def ListSavedSearches(
        self,
        request: sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesResponse, collections.abc.Awaitable[sift.saved_searches.v1.saved_searches_pb2.ListSavedSearchesResponse]]:
        """List saved searches."""

    @abc.abstractmethod
    def UpdateSavedSearch(
        self,
        request: sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchResponse, collections.abc.Awaitable[sift.saved_searches.v1.saved_searches_pb2.UpdateSavedSearchResponse]]:
        """Updates an existing saved search using using the list of fields specified in `update_mask`."""

    @abc.abstractmethod
    def DeleteSavedSearch(
        self,
        request: sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchResponse, collections.abc.Awaitable[sift.saved_searches.v1.saved_searches_pb2.DeleteSavedSearchResponse]]:
        """Delete a saved search."""

    @abc.abstractmethod
    def BatchDeleteSavedSearches(
        self,
        request: sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesRequest,
        context: _ServicerContext,
    ) -> typing.Union[sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesResponse, collections.abc.Awaitable[sift.saved_searches.v1.saved_searches_pb2.BatchDeleteSavedSearchesResponse]]:
        """Batch deletes saved searches."""

def add_SavedSearchServiceServicer_to_server(servicer: SavedSearchServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
