"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _NotificationKind:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _NotificationKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NotificationKind.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOTIFICATION_KIND_UNSPECIFIED: _NotificationKind.ValueType  # 0
    NOTIFICATION_KIND_TEXT: _NotificationKind.ValueType  # 1
    NOTIFICATION_KIND_ANNOTATION_ASSIGNED: _NotificationKind.ValueType  # 2
    NOTIFICATION_KIND_MENTIONED_IN_ANNOTATION_COMMENT: _NotificationKind.ValueType  # 3
    NOTIFICATION_KIND_CONDITION_TRIGGERED: _NotificationKind.ValueType  # 4
    NOTIFICATION_KIND_ANNOTATION_STATE_CHANGED: _NotificationKind.ValueType  # 5

class NotificationKind(_NotificationKind, metaclass=_NotificationKindEnumTypeWrapper): ...

NOTIFICATION_KIND_UNSPECIFIED: NotificationKind.ValueType  # 0
NOTIFICATION_KIND_TEXT: NotificationKind.ValueType  # 1
NOTIFICATION_KIND_ANNOTATION_ASSIGNED: NotificationKind.ValueType  # 2
NOTIFICATION_KIND_MENTIONED_IN_ANNOTATION_COMMENT: NotificationKind.ValueType  # 3
NOTIFICATION_KIND_CONDITION_TRIGGERED: NotificationKind.ValueType  # 4
NOTIFICATION_KIND_ANNOTATION_STATE_CHANGED: NotificationKind.ValueType  # 5
global___NotificationKind = NotificationKind

@typing.final
class Notification(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTIFICATION_ID_FIELD_NUMBER: builtins.int
    CREATED_DATE_FIELD_NUMBER: builtins.int
    MODIFIED_DATE_FIELD_NUMBER: builtins.int
    CREATED_BY_USER_ID_FIELD_NUMBER: builtins.int
    MODIFIED_BY_USER_ID_FIELD_NUMBER: builtins.int
    ORGANIZATION_ID_FIELD_NUMBER: builtins.int
    RECIPIENT_USER_ID_FIELD_NUMBER: builtins.int
    IS_READ_FIELD_NUMBER: builtins.int
    FULL_LINK_FIELD_NUMBER: builtins.int
    NOTIFICATION_TYPE_FIELD_NUMBER: builtins.int
    CONTENTS_FIELD_NUMBER: builtins.int
    ENTITY_ID_FIELD_NUMBER: builtins.int
    notification_id: builtins.str
    created_by_user_id: builtins.str
    modified_by_user_id: builtins.str
    organization_id: builtins.str
    recipient_user_id: builtins.str
    is_read: builtins.bool
    full_link: builtins.str
    notification_type: global___NotificationKind.ValueType
    contents: builtins.str
    entity_id: builtins.str
    @property
    def created_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        notification_id: builtins.str = ...,
        created_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by_user_id: builtins.str = ...,
        modified_by_user_id: builtins.str = ...,
        organization_id: builtins.str = ...,
        recipient_user_id: builtins.str = ...,
        is_read: builtins.bool = ...,
        full_link: builtins.str = ...,
        notification_type: global___NotificationKind.ValueType = ...,
        contents: builtins.str = ...,
        entity_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_date", b"created_date", "modified_date", b"modified_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["contents", b"contents", "created_by_user_id", b"created_by_user_id", "created_date", b"created_date", "entity_id", b"entity_id", "full_link", b"full_link", "is_read", b"is_read", "modified_by_user_id", b"modified_by_user_id", "modified_date", b"modified_date", "notification_id", b"notification_id", "notification_type", b"notification_type", "organization_id", b"organization_id", "recipient_user_id", b"recipient_user_id"]) -> None: ...

global___Notification = Notification

@typing.final
class ListNotificationsRequest(google.protobuf.message.Message):
    """The request for a call to `NotificationService_ListNotifications` to retrieve notifications."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    page_size: builtins.int
    """The maximum number of notifications to return.
    The service may return fewer than this value.
    If unspecified, at most 50 notifications will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """
    page_token: builtins.str
    """A page token, received from a previous `ListNotifications` call.
    Provide this to retrieve the subsequent page.
    When paginating, all other parameters provided to `ListNotifications` must match
    the call that provided the page token.
    """
    filter: builtins.str
    """A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
    Available fields to filter by are `notification_id`, `created_by_user_id`, `recipient_user_id`,
    `created_date`, `notification_type`, and `is_read`.
    For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
    For more information about the fields used for filtering, please refer to [this definition](/protocol-buffers/documentation#notification). Optional.
    """
    def __init__(
        self,
        *,
        page_size: builtins.int = ...,
        page_token: builtins.str = ...,
        filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "page_size", b"page_size", "page_token", b"page_token"]) -> None: ...

global___ListNotificationsRequest = ListNotificationsRequest

@typing.final
class ListNotificationsResponse(google.protobuf.message.Message):
    """The response of a call to `NotificationService_ListNotifications`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTIFICATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    @property
    def notifications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Notification]: ...
    def __init__(
        self,
        *,
        notifications: collections.abc.Iterable[global___Notification] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["next_page_token", b"next_page_token", "notifications", b"notifications"]) -> None: ...

global___ListNotificationsResponse = ListNotificationsResponse

@typing.final
class BatchUpdateNotificationsRequest(google.protobuf.message.Message):
    """The request for a call to `NotificationService_BatchUpdateNotifications` to update notifications.
    A maximum of 1000 notifications can be modified in a batch.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTS_FIELD_NUMBER: builtins.int
    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateNotificationRequest]: ...
    def __init__(
        self,
        *,
        requests: collections.abc.Iterable[global___UpdateNotificationRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["requests", b"requests"]) -> None: ...

global___BatchUpdateNotificationsRequest = BatchUpdateNotificationsRequest

@typing.final
class UpdateNotificationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTIFICATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def notification(self) -> global___Notification:
        """The notification to update. The notification's `notification_id` field is used to identify the notification to update
        and must be provided.
        """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated. Currently, the only field that can be updated is `is_read`."""

    def __init__(
        self,
        *,
        notification: global___Notification | None = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["notification", b"notification", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["notification", b"notification", "update_mask", b"update_mask"]) -> None: ...

global___UpdateNotificationRequest = UpdateNotificationRequest

@typing.final
class BatchUpdateNotificationsResponse(google.protobuf.message.Message):
    """The response of a call to `NotificationService_BatchUpdateNotifications` containing the updated notifications."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTIFICATIONS_FIELD_NUMBER: builtins.int
    @property
    def notifications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Notification]:
        """The updated notifications."""

    def __init__(
        self,
        *,
        notifications: collections.abc.Iterable[global___Notification] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["notifications", b"notifications"]) -> None: ...

global___BatchUpdateNotificationsResponse = BatchUpdateNotificationsResponse
