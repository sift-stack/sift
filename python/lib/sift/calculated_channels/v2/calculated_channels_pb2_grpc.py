# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sift.calculated_channels.v2 import calculated_channels_pb2 as sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2


class CalculatedChannelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCalculatedChannel = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/GetCalculatedChannel',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.GetCalculatedChannelRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.GetCalculatedChannelResponse.FromString,
                )
        self.CreateCalculatedChannel = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/CreateCalculatedChannel',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.CreateCalculatedChannelRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.CreateCalculatedChannelResponse.FromString,
                )
        self.ListCalculatedChannels = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/ListCalculatedChannels',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelsRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelsResponse.FromString,
                )
        self.UpdateCalculatedChannel = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/UpdateCalculatedChannel',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.UpdateCalculatedChannelRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.UpdateCalculatedChannelResponse.FromString,
                )
        self.ListCalculatedChannelVersions = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/ListCalculatedChannelVersions',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelVersionsRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelVersionsResponse.FromString,
                )
        self.ResolveCalculatedChannel = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/ResolveCalculatedChannel',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ResolveCalculatedChannelRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ResolveCalculatedChannelResponse.FromString,
                )
        self.BatchResolveCalculatedChannels = channel.unary_unary(
                '/sift.calculated_channels.v2.CalculatedChannelService/BatchResolveCalculatedChannels',
                request_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.BatchResolveCalculatedChannelsRequest.SerializeToString,
                response_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.BatchResolveCalculatedChannelsResponse.FromString,
                )


class CalculatedChannelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCalculatedChannel(self, request, context):
        """Retrieve the latest version of a calculated channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCalculatedChannel(self, request, context):
        """Create a calculated channel.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCalculatedChannels(self, request, context):
        """Retrieve the latest versions of calculated channels based on an optional filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCalculatedChannel(self, request, context):
        """Update and create a new version of a calculated channel.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCalculatedChannelVersions(self, request, context):
        """List versions of a particular calculated channel with an optional filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveCalculatedChannel(self, request, context):
        """Resolve a calculated channel into an expression with references.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchResolveCalculatedChannels(self, request, context):
        """Resolve a batch of calculated channels into expressions with references.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalculatedChannelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCalculatedChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCalculatedChannel,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.GetCalculatedChannelRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.GetCalculatedChannelResponse.SerializeToString,
            ),
            'CreateCalculatedChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCalculatedChannel,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.CreateCalculatedChannelRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.CreateCalculatedChannelResponse.SerializeToString,
            ),
            'ListCalculatedChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCalculatedChannels,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelsRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelsResponse.SerializeToString,
            ),
            'UpdateCalculatedChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCalculatedChannel,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.UpdateCalculatedChannelRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.UpdateCalculatedChannelResponse.SerializeToString,
            ),
            'ListCalculatedChannelVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCalculatedChannelVersions,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelVersionsRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelVersionsResponse.SerializeToString,
            ),
            'ResolveCalculatedChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveCalculatedChannel,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ResolveCalculatedChannelRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ResolveCalculatedChannelResponse.SerializeToString,
            ),
            'BatchResolveCalculatedChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchResolveCalculatedChannels,
                    request_deserializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.BatchResolveCalculatedChannelsRequest.FromString,
                    response_serializer=sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.BatchResolveCalculatedChannelsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sift.calculated_channels.v2.CalculatedChannelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CalculatedChannelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCalculatedChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/GetCalculatedChannel',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.GetCalculatedChannelRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.GetCalculatedChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCalculatedChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/CreateCalculatedChannel',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.CreateCalculatedChannelRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.CreateCalculatedChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCalculatedChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/ListCalculatedChannels',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelsRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCalculatedChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/UpdateCalculatedChannel',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.UpdateCalculatedChannelRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.UpdateCalculatedChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCalculatedChannelVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/ListCalculatedChannelVersions',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelVersionsRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ListCalculatedChannelVersionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveCalculatedChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/ResolveCalculatedChannel',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ResolveCalculatedChannelRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.ResolveCalculatedChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchResolveCalculatedChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sift.calculated_channels.v2.CalculatedChannelService/BatchResolveCalculatedChannels',
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.BatchResolveCalculatedChannelsRequest.SerializeToString,
            sift_dot_calculated__channels_dot_v2_dot_calculated__channels__pb2.BatchResolveCalculatedChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
