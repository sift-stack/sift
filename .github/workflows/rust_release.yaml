name: Crates Publish

on:
  workflow_dispatch:

jobs:
  rust-ci:
    if: github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags')
    uses: ./.github/workflows/rust_ci.yaml

  publish-to-crates-io-sift_rs:
    runs-on: ubuntu-latest
    name: Publish to crates.io for sift_rs
    needs: rust-ci
    environment:
      name: crates.io
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish crate
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
        working-directory: './rust/crates/sift_rs'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  publish-to-crates-io-sift_error:
    runs-on: ubuntu-latest
    name: Publish to crates.io for sift_error
    needs: publish-to-crates-io-sift_rs
    environment:
      name: crates.io
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish crate
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
        working-directory: './rust/crates/sift_error'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  publish-to-crates-io-sift_connect:
    runs-on: ubuntu-latest
    name: Publish to crates.io for sift_connect
    needs: publish-to-crates-io-sift_error
    environment:
      name: crates.io
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish crate
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
        working-directory: './rust/crates/sift_connect'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  
  publish-to-crates-io-sift_stream:
    runs-on: ubuntu-latest
    name: Publish to crates.io for sift_stream
    needs: publish-to-crates-io-sift_connect
    environment:
      name: crates.io
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish crate
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
        working-directory: './rust/crates/sift_stream'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

