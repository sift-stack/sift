name: Build Wheels

on:
  workflow_dispatch:

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-versions: ${{ steps.get-versions.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get Python versions from pyproject.toml
        id: get-versions
        run: |
          versions=$(grep "Programming Language :: Python :: " python/pyproject.toml | sed 's/.*Python :: \([0-9.]*\).*/\1/' | jq -R -s -c 'split("\n")[:-1]')
          echo "versions=$versions" >> $GITHUB_OUTPUT

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: get-python-versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ${{fromJson(needs.get-python-versions.outputs.python-versions)}}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD: "cp*"
          CIBW_SKIP: "cp36-* cp37-* *-win32 *-manylinux_i686 *-musllinux*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          # Add any build dependencies your package needs
          CIBW_BEFORE_BUILD: "pip install build"
          # Test dependencies and commands if needed
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest {project}/tests"
        run: |
          python -m cibuildwheel python --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: ./wheelhouse/*.whl
          retention-days: 7

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install build
        run: python -m pip install build

      - name: Build sdist
        run: python -m build --sdist python

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: python/dist/*.tar.gz
          retention-days: 7

  verify_wheels:
    name: Verify wheels
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install twine
        run: python -m pip install twine

      - name: Check wheels
        run: |
          twine check dist/*
