name: python-ci

permissions:
  contents: read

on:
  release:
    types: [ created ]
  pull_request:
  push:
    branches:
      - main
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          ruff check

  format:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          ruff format --check

  mypy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          mypy lib

  pyright:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          pyright lib

  unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          pytest -m "not integration"

  integration-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          pytest -m "integration"

  sync-stubs-mypy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python/lib
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'
          stubtest \
            --mypy-config-file ../pyproject.toml \
            sift_client.resources.sync_stubs
