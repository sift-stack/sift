name: python-ci

on:
  release:
    types: [ created ]
  pull_request:
  push:
    branches:
      - main
  workflow_call:

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install '.[development,openssl,tdms,rosbags,hdf5,sift-stream]'

      - name: Upload venv
        uses: actions/upload-artifact@v4
        with:
          name: python-venv
          path: python/venv

  lint:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          ruff check

  format:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          ruff format --check

  mypy:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          mypy lib

  pyright:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          pyright lib

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          pytest -m "not integration"

  integration-tests:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          pytest -m "integration"

  sync-stubs-mypy:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: python/venv
      - run: |
          source venv/bin/activate
          cd lib
          stubtest \
            --mypy-config-file ../pyproject.toml \
            sift_client.resources.sync_stubs
