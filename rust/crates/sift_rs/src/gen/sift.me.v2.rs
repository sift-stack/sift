// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Resources {
    #[prost(string, repeated, tag="1")]
    pub asset_ids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(bool, tag="2")]
    pub all_assets: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PermissionResources {
    #[prost(map="string, message", tag="1")]
    pub permission_resources: ::std::collections::HashMap<::prost::alloc::string::String, Resources>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Permissions {
    #[prost(map="string, message", tag="1")]
    pub organization_permission_resources: ::std::collections::HashMap<::prost::alloc::string::String, PermissionResources>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetMeRequest {
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetMeResponse {
    #[prost(string, tag="1")]
    pub user_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub user_email: ::prost::alloc::string::String,
    #[prost(message, repeated, tag="3")]
    pub organizations: ::prost::alloc::vec::Vec<super::super::common::r#type::v1::Organization>,
    #[prost(bool, tag="4")]
    pub is_admin: bool,
    #[prost(message, optional, tag="5")]
    pub permissions: ::core::option::Option<Permissions>,
    #[prost(message, optional, tag="6")]
    pub created_date: ::core::option::Option<::pbjson_types::Timestamp>,
    #[deprecated]
    #[prost(string, tag="7")]
    pub hash_based_message_authentication_code: ::prost::alloc::string::String,
}
include!("sift.me.v2.tonic.rs");
include!("sift.me.v2.serde.rs");
// @@protoc_insertion_point(module)