// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ExternalSync {
    #[prost(string, tag="1")]
    pub organization_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub most_recent_sync_date: ::core::option::Option<::pbjson_types::Timestamp>,
    #[prost(string, optional, tag="3")]
    pub most_recent_sync_by_user_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, tag="4")]
    pub scim_server_url: ::prost::alloc::string::String,
    #[prost(message, optional, tag="5")]
    pub token_created_date: ::core::option::Option<::pbjson_types::Timestamp>,
    #[prost(uint32, tag="6")]
    pub token_lifetime_seconds: u32,
    #[prost(string, optional, tag="7")]
    pub most_recent_token_by_user_id: ::core::option::Option<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ExternalSyncToken {
    #[prost(string, tag="1")]
    pub token_id: ::prost::alloc::string::String,
    #[prost(uint32, tag="2")]
    pub lifetime_seconds: u32,
    #[prost(message, optional, tag="3")]
    pub created_date: ::core::option::Option<::pbjson_types::Timestamp>,
    #[prost(string, tag="4")]
    pub created_by_user_id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SyncOrganizationRequest {
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SyncOrganizationResponse {
    #[prost(message, optional, tag="1")]
    pub external_sync: ::core::option::Option<ExternalSync>,
    #[prost(uint32, tag="2")]
    pub existing_user_count: u32,
    #[prost(string, repeated, tag="3")]
    pub added_to_organization_user_ids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, repeated, tag="4")]
    pub created_users: ::prost::alloc::vec::Vec<super::super::common::r#type::v1::User>,
    #[prost(string, repeated, tag="5")]
    pub deactivated_user_ids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(uint32, tag="6")]
    pub existing_group_count: u32,
    #[prost(message, repeated, tag="7")]
    pub created_user_groups: ::prost::alloc::vec::Vec<super::super::user_groups::v2::UserGroup>,
    #[prost(string, repeated, tag="8")]
    pub deleted_user_group_names: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GenerateTokenRequest {
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenerateTokenResponse {
    #[prost(message, optional, tag="1")]
    pub external_sync: ::core::option::Option<ExternalSync>,
    #[prost(string, tag="2")]
    pub token: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetExternalSyncRequest {
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetExternalSyncResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
    #[prost(message, optional, tag="2")]
    pub external_sync: ::core::option::Option<ExternalSync>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListExternalSyncTokensRequest {
    #[prost(uint32, tag="1")]
    pub page_size: u32,
    #[prost(string, tag="2")]
    pub page_token: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub filter: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub order_by: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListExternalSyncTokensResponse {
    #[prost(message, repeated, tag="1")]
    pub external_sync_tokens: ::prost::alloc::vec::Vec<ExternalSyncToken>,
    #[prost(string, tag="2")]
    pub next_page_token: ::prost::alloc::string::String,
}
include!("sift.external_sync.v1.tonic.rs");
include!("sift.external_sync.v1.serde.rs");
// @@protoc_insertion_point(module)