syntax = "proto3";

package sift.users.v2;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sift/common/type/v1/user.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {title: "User Service"}
};

service UserService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Service to programmatically interact with user objects."};

  // Used to toggle a user's active status within their organization.
  rpc UpdateUserOrganizationActive(UpdateUserOrganizationActiveRequest) returns (UpdateUserOrganizationActiveResponse) {
    option (google.api.http) = {
      post: "/api/v2/users/{user_id}/active"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "UpdateUserOrganizationActive"
      description: "Used to toggle a user's active status within their organization."
    };
  }

  // Retrieves a user object.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {get: "/api/v2/users/{user_id}"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "GetUser"
      description: "Retrieves a user object."
    };
  }
}

message UpdateUserOrganizationActiveRequest {
  string user_id = 1;
  string organization_id = 2;
  bool active = 3;
}

message UpdateUserOrganizationActiveResponse {}

// The request for a call to retrieve a single existing user by its user_id.
message GetUserRequest {
  // The id of the asset to be retrieved. Required.
  string user_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetUserResponse {
  sift.common.type.v1.User user = 1;
}
