syntax = "proto3";

package sift.ingestion_configs.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sift/common/type/v1/channel_bit_field_element.proto";
import "sift/common/type/v1/channel_data_type.proto";
import "sift/common/type/v1/channel_enum_type.proto";

option go_package = "azimuth/gen/protos/go/sift/ingestion_configs/v1;ingestion_configsv1pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {title: "Ingestion Config Service"}
};

service IngestionConfigService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "Service to programmatically interact with [ingestion configs](/glossary#ingestion-config)."
    external_docs: {
      url: "/ingestion/creating-amend-ingestion-config",
      description: "Read more about what ingestion configs are.";
    }
  };

  // Retrieves an ingestion config.
  rpc GetIngestionConfig(GetIngestionConfigRequest) returns (GetIngestionConfigResponse) {
    option (google.api.http) = {get: "/api/v1/ingestion-configs/{ingestion_config_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "GetIngestionConfig"
      description: "Retrieves an ingestion config."
    };
  }

  // Create an ingestion config.
  rpc CreateIngestionConfig(CreateIngestionConfigRequest) returns (CreateIngestionConfigResponse) {
    option (google.api.http) = {
      post: "/api/v1/ingestion-configs"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "CreateIngestionConfig"
      description: "Create an ingestion config."
    };
  }

  // List ingestion configs using an optional filter.
  rpc ListIngestionConfigs(ListIngestionConfigsRequest) returns (ListIngestionConfigsResponse) {
    option (google.api.http) = {get: "/api/v1/ingestion-configs"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListIngestionConfigs"
      description: "List ingestion configs using an optional filter."
    };
  }

  // Create ingestion config [flows](/glossary#flow).
  rpc CreateIngestionConfigFlows(CreateIngestionConfigFlowsRequest) returns (CreateIngestionConfigFlowsResponse) {
    option (google.api.http) = {post: "/api/v1/ingestion-configs/{ingestion_config_id}/flows"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "CreateIngestionConfigFlows"
      description: "Create ingestion config [flows](/glossary#flow)."
    };
  }

  // List ingestion config [flows](/glossary#flow) using an optional filter.
  rpc ListIngestionConfigFlows(ListIngestionConfigFlowsRequest) returns (ListIngestionConfigFlowsResponse) {
    option (google.api.http) = {get: "/api/v1/ingestion-configs/{ingestion_config_id}/flows"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListIngestionConfigFlows"
      description: "List ingestion config [flows](/glossary#flow) using an optional filter."
    };
  }
}

message IngestionConfig {
  string ingestion_config_id = 1 [(google.api.field_behavior) = REQUIRED];
  string asset_id = 2 [(google.api.field_behavior) = REQUIRED];
  string client_key = 3 [(google.api.field_behavior) = OPTIONAL];
}

message FlowConfig {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated ChannelConfig channels = 2;
}
message ChannelConfig {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string component = 2 [(google.api.field_behavior) = OPTIONAL];
  string unit = 3 [(google.api.field_behavior) = OPTIONAL];
  string description = 4 [(google.api.field_behavior) = OPTIONAL];
  sift.common.type.v1.ChannelDataType data_type = 5 [(google.api.field_behavior) = REQUIRED];
  repeated sift.common.type.v1.ChannelEnumType enum_types = 6;
  repeated sift.common.type.v1.ChannelBitFieldElement bit_field_elements = 7;
}

// The request for a call to `IngestionConfigService_GetIngestionConfig` to retrieve an ingestion config.
message GetIngestionConfigRequest {
  string ingestion_config_id = 1 [(google.api.field_behavior) = REQUIRED];
}

// The result of a call to `IngestionConfigService_GetIngestionConfig`.
message GetIngestionConfigResponse {
  IngestionConfig ingestion_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// The request for a call to `IngestionConfigService_ListIngestionConfigs` to retrieve ingestion configs.
message CreateIngestionConfigRequest {
  string asset_name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated FlowConfig flows = 2;
  string organization_id = 3 [(google.api.field_behavior) = OPTIONAL];

  // The `client_key` field is a user-defined string you can supply to uniquely identify
  // an ingestion config (and retrieve it via `GetIngestionConfig`).
  // An error is returned if you try to create an ingestion config with a
  // client_key that already exists.
  string client_key = 4 [(google.api.field_behavior) = OPTIONAL];
}

// The result of a call to `IngestionConfigService_CreateIngestionConfig`.
message CreateIngestionConfigResponse {
  IngestionConfig ingestion_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// The request for a call to `IngestionConfigService_ListIngestionConfigs` to retrieve ingestion configs.
message ListIngestionConfigsRequest {
  // The maximum number of ingestion configs to return. The service may return fewer than this value.
  // If unspecified, at most 50 ingestion configs will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListIngestionConfigs` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListIngestionConfigs` must match
  // the call that provided the page token. Optional.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are `ingestion_config_id`, `client_key`, `asset_id`, `created_date`, and `modified_date`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to [this definition](/protocol-buffers/documentation#ingestionconfigservice). Optional.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The result of a call to `IngestionConfigService_ListIngestionConfigs`.
message ListIngestionConfigsResponse {
  repeated IngestionConfig ingestion_configs = 1;
  string next_page_token = 2;
}

// The request for a call to `IngestionConfigService_CreateIngestionConfigFlows` to create ingestion config flows.
message CreateIngestionConfigFlowsRequest {
  string ingestion_config_id = 1;

  // These flows must have unique names. If you try to send a flow with a name that already exists for an ingestion config, it will return an error.
  repeated FlowConfig flows = 2;
}

// The result of a call to `IngestionConfigService_CreateIngestionConfigFlows`.
message CreateIngestionConfigFlowsResponse {}

// The request for a call to `IngestionConfigService_ListIngestionConfigFlows` to retrieve ingestion config flows.
message ListIngestionConfigFlowsRequest {
  string ingestion_config_id = 1 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of ingestion config flows to return. The service may return fewer than this value.
  // If unspecified, at most 50 ingestion config flows will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListIngestionConfigFlows` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListIngestionConfigFlows` must match
  // the call that provided the page token. Optional.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are `flow_name`, `flow_id`, `created_date`, and `modified_date`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to [this definition](/protocol-buffers/documentation#ingestionconfig). Optional.
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// The result of a call to `IngestionConfigService_ListIngestionConfigFlows`.
message ListIngestionConfigFlowsResponse {
  repeated FlowConfig flows = 1;
  string next_page_token = 2;
}
