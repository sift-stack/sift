syntax = "proto3";

package sift.channel_schemas.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sift/common/type/v1/channel_bit_field_element.proto";
import "sift/common/type/v1/channel_data_type.proto";
import "sift/common/type/v1/channel_enum_type.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {title: "Channel Schema Service"}
};

service ChannelSchemaService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Service to programmatically interact with channel schemas"};

  // Create a channel schema
  rpc CreateChannelSchema(CreateChannelSchemaRequest) returns (CreateChannelSchemaResponse) {
    option (google.api.http) = {
      post: "/api/v1/channel-schemas",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "CreateChannelSchema"
      description: "Create a channel schema"
    };
  }

  // Create a batch of channel schemas
  rpc BatchCreateChannelSchemas(BatchCreateChannelSchemasRequest) returns (BatchCreateChannelSchemasResponse) {
    option (google.api.http) = {
      post: "/api/v1/channel-schemas:batch-create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "BatchCreateChannelSchemas"
      description: "Create a batch of channel schemas"
    };
  }
}

// The request for a call to `ChannelSchemaService_CreateChannelSchema`.
message CreateChannelSchemaRequest {
  // The name of the component (case-insensitive).
  string component = 1 [(google.api.field_behavior) = OPTIONAL];
  // The name of the channel (case-insensitive).
  string channel = 2 [(google.api.field_behavior) = REQUIRED];
  string unit = 3 [(google.api.field_behavior) = OPTIONAL];
  sift.common.type.v1.ChannelDataType data_type = 4 [(google.api.field_behavior) = REQUIRED];
  repeated sift.common.type.v1.ChannelEnumType enum_types = 5 [(google.api.field_behavior) = OPTIONAL];
  repeated sift.common.type.v1.ChannelBitFieldElement bit_field_elements = 6 [(google.api.field_behavior) = OPTIONAL];
  // The name of the asset (case-insensitive).
  string asset_name = 7 [(google.api.field_behavior) = REQUIRED];
  // This field is optional if the caller belongs to a single organization.
  string organization_id = 8 [(google.api.field_behavior) = OPTIONAL];
}

// The response of a call to `ChannelSchemaService_CreateChannelSchema`.
message CreateChannelSchemaResponse {}

// The request for a call to `ChannelSchemaService_BatchCreateChannelSchemas`.
message BatchCreateChannelSchemasRequest {
  repeated CreateChannelSchemaRequest requests = 1 [(google.api.field_behavior) = REQUIRED];
  // The asset to which the channel schemas belong (case-insensitive).
  // If this field, and any of the child requests specify an asset, the assets must match.
  string asset_name = 2 [(google.api.field_behavior) = OPTIONAL];
  // The organization to which the channel schemas belong.
  // If this field, and any of the child requests specify an organization_id, the organization_ids must match.
  // This field is optional if the caller belongs to a single organization.
  string organization_id = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The response of a call to `ChannelSchemaService_BatchCreateChannelSchemas`.
message BatchCreateChannelSchemasResponse {}
