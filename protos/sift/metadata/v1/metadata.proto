syntax = "proto3";

package sift.metadata.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {title: "Metadata service"}
};

service MetadataService {
  // Create a metadata key.
  rpc CreateMetadataKey(CreateMetadataKeyRequest) returns (CreateMetadataKeyResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-keys"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "CreateMetadataKey",
      description: "Create a metadata key."
    };
  }

  // Create a metadata value.
  rpc CreateMetadataValue(CreateMetadataValueRequest) returns (CreateMetadataValueResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-values"
      body: "*"
    };
  }

  // List metadata keys.
  rpc ListMetadataKeys(ListMetadataKeysRequest) returns (ListMetadataKeysResponse) {
    option (google.api.http) = {get: "/api/v1/metadata-keys"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListMetadataKeys"
      description: "List metadata keys."
    };
  }

  // List metadata values.
  rpc ListMetadataValues(ListMetadataValuesRequest) returns (ListMetadataValuesResponse) {
    option (google.api.http) = {get: "/api/v1/metadata-values"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListMetadataValues"
      description: "List metadata values."
    };
  }

  // Archive metadata keys.
  rpc ArchiveMetadataKeys(ArchiveMetadataKeysRequest) returns (ArchiveMetadataKeysResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-keys/archive",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ArchiveMetadataKeys"
      description: "Archive metadata keys."
    };
  }

  // Archive metadata values.
  rpc ArchiveMetadataValues(ArchiveMetadataValuesRequest) returns (ArchiveMetadataValuesResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-values/archive",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ArchiveMetadataValues"
      description: "Archive metadata values."
    };
  }

  // Unarchive metadata keys.
  rpc UnarchiveMetadataKeys(UnarchiveMetadataKeysRequest) returns (UnarchiveMetadataKeysResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-keys/unarchive",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "UnarchiveMetadataKeys"
      description: "Unarchive metadata keys."
    };
  }

  // Unarchive metadata values.
  rpc UnarchiveMetadataValues(UnarchiveMetadataValuesRequest) returns (UnarchiveMetadataValuesResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-values/unarchive",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "UnarchiveMetadataValues"
      description: "Unarchive metadata values."
    };
  }

  // Delete metadata keys.
  rpc DeleteMetadataKeys(DeleteMetadataKeysRequest) returns (DeleteMetadataKeysResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-keys/delete",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "DeleteMetadataKeys"
      description: "Delete metadata keys."
    };
  }

  // Delete metadata values.
  rpc DeleteMetadataValues(DeleteMetadataValuesRequest) returns (DeleteMetadataValuesResponse) {
    option (google.api.http) = {
      post: "/api/v1/metadata-values/delete",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "DeleteMetadataValues"
      description: "Delete metadata values."
    };
  }

  // List metadata key usage.
  rpc ListMetadataUsage(ListMetadataUsageRequest) returns (ListMetadataUsageResponse) {
    option (google.api.http) = {get: "/api/v1/metadata-key-usage"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListMetadataUsage"
      description: "List metadata key usage."
    };
  }
}

// Metadata key type.
enum MetadataKeyType {
  METADATA_KEY_TYPE_UNSPECIFIED = 0;
  // string
  METADATA_KEY_TYPE_STRING = 1;
  // number
  METADATA_KEY_TYPE_NUMBER = 2;
  // boolean
  METADATA_KEY_TYPE_BOOLEAN = 3;
}

message MetadataKey {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  MetadataKeyType type = 2 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp archived_date = 3 [(google.api.field_behavior) = OPTIONAL];
}

message MetadataValue {
  MetadataKey key = 1 [(google.api.field_behavior) = REQUIRED];
  oneof value {
    string string_value = 2;
    double number_value = 3;
    bool boolean_value = 4;
  }
  google.protobuf.Timestamp archived_date = 5 [(google.api.field_behavior) = OPTIONAL];
}

// The request of a call to `MetadataService_CreateMetadataKey` to create a metadata key.
message CreateMetadataKeyRequest {
  MetadataKey metadata_key = 1 [(google.api.field_behavior) = REQUIRED];
}

// The response of a call to `MetadataService_CreateMetadataKey` to create a metadata key.
message CreateMetadataKeyResponse {
  MetadataKey metadata_key = 1 [(google.api.field_behavior) = REQUIRED];
}

// The request of a call to `MetadataService_CreateMetadataValue` to create a metadata value.
message CreateMetadataValueRequest {
  MetadataValue metadata_value = 1 [(google.api.field_behavior) = REQUIRED];
}

// The response of a call to `MetadataService_CreateMetadataValue` to create a metadata value.
message CreateMetadataValueResponse {
  MetadataValue metadata_value = 1 [(google.api.field_behavior) = REQUIRED];
}

// The request for a call to `MetadataService_ListMetadataKeys` to retrieve metadata keys.
message ListMetadataKeysRequest {
  // The maximum number of metadata keys to return. The service may return fewer than this value.
  // If unspecified, at most 50 metadata keys will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListMetadataKeys` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListMetadataKeys` must match
  // the call that provided the page token. Optional.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are:
  // `name`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to this definition. Optional.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];

  // How to order the retrieved metadata keys. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
  // Available fields to order_by are `created_date` and `name`.
  // If left empty, items are ordered by `created_date` in ascending order (oldest-first).
  // For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
  // Example: "created_date desc,modified_date"
  string order_by = 4 [(google.api.field_behavior) = OPTIONAL];
}

// The response of a call to `MetadataService_ListMetadataKeysResponse`.
message ListMetadataKeysResponse {
  repeated MetadataKey metadata_keys = 1;
  string next_page_token = 2;
}

message ListMetadataValuesRequest {
  // The maximum number of metadata values to return. The service may return fewer than this value.
  // If unspecified, at most 50 metadata values will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListMetadataValues` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListMetadataValues` must match
  // the call that provided the page token. Optional.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are:
  // `value_string`, `value_number`, and `value_boolean`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to this definition. Optional.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];

  // How to order the retrieved metadata keys. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
  // Available fields to order_by are `created_date` and `name`.
  // If left empty, items are ordered by `created_date` in ascending order (oldest-first).
  // For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
  // Example: "created_date desc,modified_date"
  string order_by = 4 [(google.api.field_behavior) = OPTIONAL];

  // The name of the metadata key to list values for.
  string metadata_key_name = 5 [(google.api.field_behavior) = REQUIRED];
}

message ListMetadataValuesResponse {
  repeated MetadataValue metadata_values = 1;
  string next_page_token = 2;
}

message ArchiveMetadataKeysRequest {
  repeated MetadataKey metadata_keys = 1 [(google.api.field_behavior) = REQUIRED];
}

message ArchiveMetadataKeysResponse {}

message ArchiveMetadataValuesRequest {
  repeated MetadataValue metadata_values = 1 [(google.api.field_behavior) = REQUIRED];
}

message ArchiveMetadataValuesResponse {}

message UnarchiveMetadataKeysRequest {
  repeated MetadataKey metadata_keys = 1 [(google.api.field_behavior) = REQUIRED];
  bool unarchive_values = 2 [(google.api.field_behavior) = OPTIONAL];
}

message UnarchiveMetadataKeysResponse {}

message UnarchiveMetadataValuesRequest {
  repeated MetadataValue metadata_values = 1 [(google.api.field_behavior) = REQUIRED];
}

message UnarchiveMetadataValuesResponse {}

message DeleteMetadataKeysRequest {
  repeated MetadataKey metadata_keys = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteMetadataKeysResponse {}

message DeleteMetadataValuesRequest {
  repeated MetadataValue metadata_values = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteMetadataValuesResponse {}

message MetadataUsage {
  // The ID of the entity. For example assetId, runId, reportId, etc.
  string entity_id = 1 [(google.api.field_behavior) = REQUIRED];
  // The type of the entity. For example asset, run, report, etc.
  string entity_type = 2 [(google.api.field_behavior) = REQUIRED];
  // The value of the metadata key on this entity.
  MetadataValue value = 3 [(google.api.field_behavior) = REQUIRED];
}

message ListMetadataUsageRequest {
  // The maximum number of metadata key usages to return. The service may return fewer than this value.
  // If unspecified, at most 50 metadata key usages will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // A page token, received from a previous `ListMetadataUsage` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListMetadataUsage` must match
  // the call that provided the page token. Optional.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are:
  // `entity_name`, `entity_type`, `key_name`,`value_string`, `value_number`, and `value_boolean`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to this definition. Optional.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];
  // How to order the retrieved metadata key usages. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
  // Available fields to order_by are `created_date`, `entity_id` and `entity_type`.
  // If left empty, items are ordered by `created_date` in ascending order (oldest-first).
  // For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
  // Example: "created_date desc"
  string order_by = 4 [(google.api.field_behavior) = OPTIONAL];
}

message ListMetadataUsageResponse {
  repeated MetadataUsage metadata_usages = 1;
  string next_page_token = 2;
}
