syntax = "proto3";

package sift.calculated_channels.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sift/common/type/v1/channel_data_type.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {title: "Calculated Channels Service"}
};

service CalculatedChannelsService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "Service to programmatically interact with calculated channels."
    external_docs: {
      url: "https://customer.support.siftstack.com/servicedesk/customer/portal/2/article/265421153";
      description: "Read more about calculated channels.";
    }
  };

  // Retrieves a list of valid identifiers that can be used as part of a calculated channel expression.
  rpc ListExpressionIdentifiers(ListExpressionIdentifiersRequest) returns (ListExpressionIdentifiersResponse) {
    option (google.api.http) = {get: "/api/v1/calculated-channels:expression-identifiers"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListExpressionIdentifiers"
      description: "Retrieves a list of valid identifiers that can be used as part of a calculated channel expression."
    };
  }

  // Used to validate whether or not an expression used for a calculated channel is valid.
  rpc ValidateExpression(ValidateExpressionRequest) returns (ValidateExpressionResponse) {
    option (google.api.http) = {
      post: "/api/v1/calculated-channels:validate-expression"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ValidateExpression"
      description: "Used to validate whether or not an expression used for a calculated channel is valid."
    };
  }
}

message ExpressionChannelReference {
  string channel_reference = 1 [(google.api.field_behavior) = REQUIRED];
  string channel_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message ExpressionRequest {
  // A map from the channel reference in the expression string (e.g. $1) to the channel id (uuid).
  // This is deprecated and should be passed in expression_channel_references instead.
  map<string, string> channel_references = 1 [deprecated = true];
  string expression = 2 [(google.api.field_behavior) = REQUIRED];
  repeated ExpressionChannelReference expression_channel_references = 3;
}

message ListExpressionIdentifiersRequest {
  // Defaults to 1000. Max of 10,000.
  uint32 page_size = 1;

  string page_token = 2;

  ExpressionMode mode = 3 [(google.api.field_behavior) = REQUIRED];
}

message ListExpressionIdentifiersResponse {
  repeated ExpressionIdentifier identifiers = 1 [(google.api.field_behavior) = REQUIRED];
}

message ExpressionIdentifier {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string description = 2 [(google.api.field_behavior) = REQUIRED];
  ExpressionIdentifierType type = 3 [(google.api.field_behavior) = REQUIRED];
  string display_name = 4 [(google.api.field_behavior) = REQUIRED];
}

enum ExpressionIdentifierType {
  EXPRESSION_IDENTIFIER_TYPE_UNSPECIFIED = 0 [deprecated = true];
  EXPRESSION_IDENTIFIER_TYPE_FUNCTION = 1;
  EXPRESSION_IDENTIFIER_TYPE_CHANNEL = 2;
}

enum ExpressionMode {
  EXPRESSION_MODE_UNSPECIFIED = 0 [deprecated = true];
  EXPRESSION_MODE_RULES = 1;
  EXPRESSION_MODE_CALCULATED_CHANNELS = 2;
  EXPRESSION_MODE_RULER = 3;
}

message ValidateExpressionRequest {
  ExpressionRequest expression = 1 [(google.api.field_behavior) = REQUIRED];
  ExpressionMode mode = 2 [(google.api.field_behavior) = REQUIRED];
}

message ValidateExpressionResponse {
  oneof result {
    ErrorValidatingExpressionResult error = 1;
    SuccessValidatingExpressionResult success = 2;
  }
}

message ErrorValidatingExpressionResult {
  string error_message = 1 [(google.api.field_behavior) = REQUIRED];
}

message SuccessValidatingExpressionResult {
  sift.common.type.v1.ChannelDataType data_type = 1 [(google.api.field_behavior) = REQUIRED];
}
