syntax = "proto3";

package sift.calculated_channels.v2;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "sift/calculated_channels/v1/calculated_channels.proto";
import "sift/common/type/v1/channel_data_type.proto";
import "sift/common/type/v1/resource_identifier.proto";
import "sift/common/type/v1/user_defined_functions.proto";
import "sift/metadata/v1/metadata.proto";


service CalculatedChannelService {
  // Retrieve the latest version of a calculated channel
  rpc GetCalculatedChannel(GetCalculatedChannelRequest) returns (GetCalculatedChannelResponse) {
    option (google.api.http) = {
      get: "/api/v2/calculated-channels/{calculated_channel_id}"
      additional_bindings: {get: "/v2/organizations/{organization_id}/calculated-channels/{client_key}"}
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "GetCalculatedChannel"
      description: "Retrieve the latest version of a calculated channel."
    };
  }

  // Create a calculated channel.
  rpc CreateCalculatedChannel(CreateCalculatedChannelRequest) returns (CreateCalculatedChannelResponse) {
    option (google.api.http) = {
      post: "/api/v2/calculated-channels"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "CreateCalculatedChannel"
      description: "Create a calculated channel."
    };
  }

  // Retrieve the latest versions of calculated channels based on an optional filter.
  rpc ListCalculatedChannels(ListCalculatedChannelsRequest) returns (ListCalculatedChannelsResponse) {
    option (google.api.http) = {get: "/api/v2/calculated-channels"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListCalculatedChannels"
      description: "Retrieve the latest versions of calculated channels based on an optional filter."
    };
  }

  // Update and create a new version of a calculated channel.
  rpc UpdateCalculatedChannel(UpdateCalculatedChannelRequest) returns (UpdateCalculatedChannelResponse) {
    option (google.api.http) = {
      patch: "/api/v2/calculated-channels"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "UpdateCalculatedChannel"
      description: "Update and create a new version of a calculated channel."
    };
  }

  // List versions of a particular calculated channel with an optional filter.
  rpc ListCalculatedChannelVersions(ListCalculatedChannelVersionsRequest) returns (ListCalculatedChannelVersionsResponse) {
    option (google.api.http) = {
      get: "/api/v2/calculated-channels/{calculated_channel_id}/versions"
      additional_bindings: {get: "/v2/organizations/{organization_id}/calculated-channels/{client_key}/versions"}
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListCalculatedChannelVersions"
      description: "List versions of a particular calculated channel with an optional filter."
    };
  }

  // Resolve a calculated channel into an expression with references.
  rpc ResolveCalculatedChannel(ResolveCalculatedChannelRequest) returns (ResolveCalculatedChannelResponse) {
    option (google.api.http) = {
      post: "/api/v2/calculated-channels/resolve"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ResolveCalculatedChannel"
      description: "Resolve a calculated channel into an expression with references"
    };
  }

  // Resolve a batch of calculated channels into expressions with references.
  rpc BatchResolveCalculatedChannels(BatchResolveCalculatedChannelsRequest) returns (BatchResolveCalculatedChannelsResponse) {
    option (google.api.http) = {
      post: "/api/v2/calculated-channels/resolve:batch"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "BatchResolveCalculatedChannel"
      description: "Resolve a batch of calculated channels into expressions with references"
    };
  }

  // Retrieve the latest versions of calculated channels based on an optional filter.
  rpc ListResolvedCalculatedChannels(ListResolvedCalculatedChannelsRequest) returns (ListResolvedCalculatedChannelsResponse) {
    option (google.api.http) = {get: "/api/v2/calculated-channels/resolved"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ListResolvedCalculatedChannels"
      description: "Retrieve the latest versions of calculated channels based on an optional filter."
    };
  }
}

message CalculatedChannel {
  string calculated_channel_id = 1 [(google.api.field_behavior) = REQUIRED];
  string organization_id = 2 [(google.api.field_behavior) = REQUIRED];
  optional string client_key = 3 [(google.api.field_behavior) = OPTIONAL];
  optional google.protobuf.Timestamp archived_date = 4 [(google.api.field_behavior) = OPTIONAL];

  string version_id = 5 [(google.api.field_behavior) = REQUIRED];
  uint32 version = 6 [(google.api.field_behavior) = REQUIRED];
  string name = 7 [(google.api.field_behavior) = REQUIRED];
  string description = 8 [(google.api.field_behavior) = REQUIRED];
  string change_message = 9 [(google.api.field_behavior) = REQUIRED];
  string user_notes = 10 [(google.api.field_behavior) = REQUIRED];
  optional string units = 18 [(google.api.field_behavior) = OPTIONAL];
  google.protobuf.Timestamp created_date = 11 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp modified_date = 12 [(google.api.field_behavior) = REQUIRED];
  CalculatedChannelConfiguration calculated_channel_configuration = 15 [(google.api.field_behavior) = REQUIRED];
  string created_by_user_id = 16 [(google.api.field_behavior) = REQUIRED];
  string modified_by_user_id = 17 [(google.api.field_behavior) = REQUIRED];
  repeated sift.common.type.v1.FunctionDependency function_dependencies = 19 [(google.api.field_behavior) = REQUIRED];
  repeated sift.metadata.v1.MetadataValue metadata = 20 [(google.api.field_behavior) = REQUIRED];
  // Whether the calculated channel is archived. This is inferred from whether archived_date is set.
  bool is_archived = 21 [(google.api.field_behavior) = REQUIRED];
}

message CalculatedChannelConfiguration {
  CalculatedChannelAssetConfiguration asset_configuration = 1 [(google.api.field_behavior) = REQUIRED];
  CalculatedChannelQueryConfiguration query_configuration = 2 [(google.api.field_behavior) = REQUIRED];
}

message CalculatedChannelAssetConfiguration {
  message AssetSelection {
    repeated string asset_ids = 1 [(google.api.field_behavior) = REQUIRED];
    repeated string tag_ids = 2 [(google.api.field_behavior) = REQUIRED];
  }
  oneof asset_scope {
    bool all_assets = 1;
    AssetSelection selection = 2;
  }
}

message CalculatedChannelQueryConfiguration {
  // Sift Expression Language.
  message Sel {
    string expression = 1 [(google.api.field_behavior) = REQUIRED];
    repeated CalculatedChannelAbstractChannelReference expression_channel_references = 2 [(google.api.field_behavior) = REQUIRED];
  }

  oneof query {
    Sel sel = 1;
  }
}

message CalculatedChannelAbstractChannelReference {
  string channel_reference = 1 [(google.api.field_behavior) = REQUIRED];
  string channel_identifier = 2 [(google.api.field_behavior) = REQUIRED];
}

message CalculatedChannelValidationResult {
  string asset_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Only included if asset was named in the request
  optional string asset_name = 2 [(google.api.field_behavior) = OPTIONAL];
  // Includes all tags that have this asset
  repeated string tag_names = 3 [(google.api.field_behavior) = REQUIRED];
  // Names of the channels that asset does not have
  repeated string missing_channels = 4 [(google.api.field_behavior) = REQUIRED];
}

// The request for a call to `CalculatedChannelService_GetCalculatedChannel` to retrieve the latest version of a calculated channel.
// If `calculated_channel_id` is provided then all other arguments will be ignored. The argument `calculated_channel_id`
// should not be used together with `client_key`. The `organization_id` argument is only required
// if using `client_key` and the user belongs to multiple organizations.
message GetCalculatedChannelRequest {
  string calculated_channel_id = 1 [(google.api.field_behavior) = OPTIONAL];
  string client_key = 2 [(google.api.field_behavior) = OPTIONAL];
  string organization_id = 3 [(google.api.field_behavior) = OPTIONAL];
}

message GetCalculatedChannelResponse {
  CalculatedChannel calculated_channel = 1 [(google.api.field_behavior) = REQUIRED];
}

message CreateCalculatedChannelRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string description = 2 [(google.api.field_behavior) = OPTIONAL];
  string user_notes = 3 [(google.api.field_behavior) = OPTIONAL];
  optional string units = 7 [(google.api.field_behavior) = OPTIONAL];
  optional string client_key = 4 [(google.api.field_behavior) = OPTIONAL];
  CalculatedChannelConfiguration calculated_channel_configuration = 5 [(google.api.field_behavior) = REQUIRED];
  repeated sift.metadata.v1.MetadataValue metadata = 8 [(google.api.field_behavior) = REQUIRED];
}

message CreateCalculatedChannelResponse {
  CalculatedChannel calculated_channel = 1 [(google.api.field_behavior) = REQUIRED];
  repeated CalculatedChannelValidationResult inapplicable_assets = 2 [(google.api.field_behavior) = REQUIRED];
}

// The request for a call to `CalculatedChannelService_ListCalculatedChannels` to retrieve latest versions of calculated channels.
message ListCalculatedChannelsRequest {
  // The maximum number of calculated channels to return. The service may return fewer than this value.
  // If unspecified, at most 50 calculated channels will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListCalculatedChannels` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListCalculatedChannels` must match
  // the call that provided the page token. Optional.
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are `calculated_channel_id`, `organization_id`, `client_key`, `name`, `description`,
  // `asset_id`, `asset_name`, `tag_id`, `tag_name`, `units`, `calculated_channel_version_id`,
  // `created_date`, `modified_date`, `created_by_user_id`, `modified_by_user_id`, `is_archived`, and `archived_date`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to [this definition](/docs/api/grpc/protocol-buffers/calculated_channels#calculated_channel). Optional.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];

  // This field is only required if your user belongs to multiple organizations.
  string organization_id = 4 [(google.api.field_behavior) = OPTIONAL];

  // How to order the retrieved calculated channels. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
  // Available fields to order_by are `created_date`, `modified_date`, `name`, `description`, `units`, and `archived_date`.
  // If left empty, items are ordered by `created_date` in descending order (newest-first).
  // For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
  // Example: "created_date desc,modified_date"
  string order_by = 5 [(google.api.field_behavior) = OPTIONAL];
}

// The response of a call to `CalculatedChannelService_ListCalculatedChannels`.
message ListCalculatedChannelsResponse {
  repeated CalculatedChannel calculated_channels = 1 [(google.api.field_behavior) = REQUIRED];
  string next_page_token = 2 [(google.api.field_behavior) = OPTIONAL];
}

// The request for a call to `CalculatedChannelService_UpdateCalculatedChannel` to update a calculated channel. Updating a calculated
// channel creates a new version of the calculated channel, leaving the previous untouched. If no update is deemed necessary, then the
// the current version is returned. To archive calculated channel, specify `archived_date` in the `update mask` as well as a non-null
// value for `archived_date` in the `calculated_channel` object. To unarchive a calculated channel, specify `archived_date` in the
// `update mask` and a `null` value for `archived_date` in the `calculated_channel` object.
message UpdateCalculatedChannelRequest {
  // The calculated channel to update.
  CalculatedChannel calculated_channel = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated. The fields available to be updated are `name`, `description`, `units`, `metadata`,
  // `query_configuration`, `archived_date`, `is_archived`, and `asset_configuration`.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];

  // Optional user notes to describe changes.
  optional string user_notes = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The response of a call to `CalculatedChannelService_UpdateCalculatedChannel`.
message UpdateCalculatedChannelResponse {
  CalculatedChannel calculated_channel = 1 [(google.api.field_behavior) = REQUIRED];
  repeated CalculatedChannelValidationResult inapplicable_assets = 2 [(google.api.field_behavior) = REQUIRED];
}

// The request for a call to `CalculatedChannelService_ListCalculatedChannelVersions` to retrieve versions
// of a particular calculated channel. If `calculated_channel_id` is provided then `client_key` is ignored.
message ListCalculatedChannelVersionsRequest {
  string calculated_channel_id = 1 [(google.api.field_behavior) = OPTIONAL];
  string client_key = 2 [(google.api.field_behavior) = OPTIONAL];

  // The maximum number of calculated channel versions to return. The service may return fewer than this value.
  // If unspecified, at most 50 calculated channels will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 3 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListCalculatedChannelVersions` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListCalculatedChannelVersions` must match
  // the call that provided the page token. Optional.
  string page_token = 4 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are `calculated_channel_id`, `organization_id`, `client_key`, `name`, `description`,
  // `asset_id`, `asset_name`, `tag_id`, `tag_name`, `version`, `units`, `calculated_channel_version_id`,
  // `created_date`, `modified_date`, `created_by_user_id`, `modified_by_user_id`, `is_archived`, and `archived_date`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to [this definition](/docs/api/grpc/protocol-buffers/calculated_channels#calculated_channel). Optional.
  string filter = 5 [(google.api.field_behavior) = OPTIONAL];

  // This field is only required if your user belongs to multiple organizations.
  string organization_id = 6 [(google.api.field_behavior) = OPTIONAL];

  // How to order the retrieved calculated channel versions. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
  // Available fields to order_by are 'version', `created_date`, `modified_date`, `name`, `description`, `units`, and `archived_date`.
  // If left empty, items are ordered by `created_date` in ascending order (oldest-first).
  // For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
  // Example: "created_date desc,modified_date".
  string order_by = 7 [(google.api.field_behavior) = OPTIONAL];
}

// The response of a call to `CalculatedChannelService_ListCalculatedChannelVersions`.
message ListCalculatedChannelVersionsResponse {
  repeated CalculatedChannel calculated_channel_versions = 1 [(google.api.field_behavior) = REQUIRED];
  string next_page_token = 2 [(google.api.field_behavior) = OPTIONAL];
}

// The request for a call to `CalculatedChannelService_ResolveCalculatedChannel` to get the all possible calculated channels.
// 1) If the calculated channel has a selection of assets and tags then those assets will be used as a base and then filtered down by the given assets and assets from the run.
// 2) If the calculated channel is enabled for all assets then:
//   a) If the request has run and assets from the run will be used as a base and then filtered down by the given assets.
//   b) If the request has run and no assets then those assets will be used.
//   c) If the request has only assets then those assets will be used.
// The `organization_id` argument is only required if using `client_key` and the user belongs to multiple organizations.
message ResolveCalculatedChannelRequest {
  oneof calculated_channel {
    // The calculated channel to resolve.
    sift.common.type.v1.ResourceIdentifier identifier = 1 [(google.api.field_behavior) = OPTIONAL];
    // A configuration for the calculated channel to resolve.
    CalculatedChannelConfiguration calculated_channel_configuration = 2 [(google.api.field_behavior) = OPTIONAL];
  }
  // This field is only required if your user belongs to multiple organizations.
  string organization_id = 3 [(google.api.field_behavior) = OPTIONAL];
  // Assets to be included or filtered through.  See above.
  sift.common.type.v1.NamedResources assets = 4 [(google.api.field_behavior) = OPTIONAL];
  // Run to get assets to be included or filtered through.  See above.
  optional sift.common.type.v1.ResourceIdentifier run = 5 [(google.api.field_behavior) = OPTIONAL];
}

// A specific calculated channel including the asset and exact channels to query.
message ResolvedCalculatedChannel {
  // The name of the specific asset that was resolved.
  string asset_name = 1 [(google.api.field_behavior) = REQUIRED];
  // The expression resolved including channel references.
  sift.calculated_channels.v1.ExpressionRequest expression_request = 2 [(google.api.field_behavior) = REQUIRED];
  sift.common.type.v1.ChannelDataType output_data_type = 3 [(google.api.field_behavior) = REQUIRED];
  string asset_id = 4 [(google.api.field_behavior) = REQUIRED];
}

// Any failure in resolution.
message UnresolvedCalculatedChannel {
  // The name of the specific asset that was not resolved.
  string asset_name = 1 [(google.api.field_behavior) = REQUIRED];
  string error_message = 2 [(google.api.field_behavior) = REQUIRED];
}

// The response of a call to `CalculatedChannelService_ResolveCalculatedChannel`.
message ResolveCalculatedChannelResponse {
  // If provided in the request, the calculated channel resolved.
  optional string calculated_channel_id = 1 [(google.api.field_behavior) = OPTIONAL];
  // All resolved calculated channels.
  repeated ResolvedCalculatedChannel resolved = 2 [(google.api.field_behavior) = REQUIRED];
  // All assets with any issues in resolution.
  repeated UnresolvedCalculatedChannel unresolved = 3 [(google.api.field_behavior) = REQUIRED];
}

// The request of a call to `CalculatedChannelService_BatchResolveCalculatedChannels`.
message BatchResolveCalculatedChannelsRequest {
  // All calculated channels to resolve.
  repeated ResolveCalculatedChannelRequest requests = 1 [(google.api.field_behavior) = REQUIRED];
}

// The response of a call to `CalculatedChannelService_BatchResolveCalculatedChannels`.
message BatchResolveCalculatedChannelsResponse {
  // All calculated channels that attempted resolution.
  repeated ResolveCalculatedChannelResponse responses = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListResolvedCalculatedChannelsRequest {
  // Assets or runs to get the resolved calculated channels for. At least one asset or run must be provided.
  string asset_id = 1 [(google.api.field_behavior) = OPTIONAL];
  string run_id = 2 [(google.api.field_behavior) = OPTIONAL];

  // The maximum number of calculated channels to return. The service may return fewer than this value.
  // If unspecified, at most 50 calculated channels will be returned. The maximum value is 1000; values above
  // 1000 will be coerced to 1000. Optional.
  uint32 page_size = 3 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListCalculatedChannels` call.
  // Provide this to retrieve the subsequent page.
  // When paginating, all other parameters provided to `ListCalculatedChannels` must match
  // the call that provided the page token. Optional.
  string page_token = 4 [(google.api.field_behavior) = OPTIONAL];

  // A [Common Expression Language (CEL)](https://github.com/google/cel-spec) filter string.
  // Available fields to filter by are `calculated_channel_id`, `organization_id`, `client_key`, `name`, `description`,
  // `asset_id`, `asset_name`, `tag_id`, `tag_name`, `version`, `units`, `calculated_channel_version_id`,
  // `created_date`, `modified_date`, `created_by_user_id`, `modified_by_user_id`, `is_archived`, and `archived_date`.
  // For further information about how to use CELs, please refer to [this guide](https://github.com/google/cel-spec/blob/master/doc/langdef.md#standard-definitions).
  // For more information about the fields used for filtering, please refer to [this definition](/docs/api/grpc/protocol-buffers/calculated_channels#calculated_channel). Optional.
  string filter = 5 [(google.api.field_behavior) = OPTIONAL];

  // How to order the retrieved calculated channels. Formatted as a comma-separated string i.e. "FIELD_NAME[ desc],...".
  // Available fields to order_by are `created_date` and `modified_date`.
  // If left empty, items are ordered by `created_date` in descending order (newest-first).
  // For more information about the format of this field, read [this](https://google.aip.dev/132#ordering)
  // Example: "created_date desc,modified_date"
  string order_by = 6 [(google.api.field_behavior) = OPTIONAL];
}

message CalculatedChannelResolution {
  // The calculated channel resolved.
  optional CalculatedChannel calculated_channel = 1 [(google.api.field_behavior) = OPTIONAL];
  // All resolved calculated channels.
  repeated ResolvedCalculatedChannel resolved = 2 [(google.api.field_behavior) = REQUIRED];
  // All assets with any issues in resolution.
  repeated UnresolvedCalculatedChannel unresolved = 3 [(google.api.field_behavior) = REQUIRED];
}

message ListResolvedCalculatedChannelsResponse {
  repeated CalculatedChannelResolution calculated_channel_resolutions = 1 [(google.api.field_behavior) = REQUIRED];
  string next_page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}
